// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: import_region.proto

#ifndef PROTOBUF_INCLUDED_import_5fregion_2eproto
#define PROTOBUF_INCLUDED_import_5fregion_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
#include "defs.pb.h"
#include "enums.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_import_5fregion_2eproto 

namespace protobuf_import_5fregion_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[4];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_import_5fregion_2eproto
namespace CARTA {
class ImportRegion;
class ImportRegionDefaultTypeInternal;
extern ImportRegionDefaultTypeInternal _ImportRegion_default_instance_;
class ImportRegionAck;
class ImportRegionAckDefaultTypeInternal;
extern ImportRegionAckDefaultTypeInternal _ImportRegionAck_default_instance_;
class ImportRegionAck_RegionStylesEntry_DoNotUse;
class ImportRegionAck_RegionStylesEntry_DoNotUseDefaultTypeInternal;
extern ImportRegionAck_RegionStylesEntry_DoNotUseDefaultTypeInternal _ImportRegionAck_RegionStylesEntry_DoNotUse_default_instance_;
class ImportRegionAck_RegionsEntry_DoNotUse;
class ImportRegionAck_RegionsEntry_DoNotUseDefaultTypeInternal;
extern ImportRegionAck_RegionsEntry_DoNotUseDefaultTypeInternal _ImportRegionAck_RegionsEntry_DoNotUse_default_instance_;
}  // namespace CARTA
namespace google {
namespace protobuf {
template<> ::CARTA::ImportRegion* Arena::CreateMaybeMessage<::CARTA::ImportRegion>(Arena*);
template<> ::CARTA::ImportRegionAck* Arena::CreateMaybeMessage<::CARTA::ImportRegionAck>(Arena*);
template<> ::CARTA::ImportRegionAck_RegionStylesEntry_DoNotUse* Arena::CreateMaybeMessage<::CARTA::ImportRegionAck_RegionStylesEntry_DoNotUse>(Arena*);
template<> ::CARTA::ImportRegionAck_RegionsEntry_DoNotUse* Arena::CreateMaybeMessage<::CARTA::ImportRegionAck_RegionsEntry_DoNotUse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace CARTA {

// ===================================================================

class ImportRegion : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CARTA.ImportRegion) */ {
 public:
  ImportRegion();
  virtual ~ImportRegion();

  ImportRegion(const ImportRegion& from);

  inline ImportRegion& operator=(const ImportRegion& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ImportRegion(ImportRegion&& from) noexcept
    : ImportRegion() {
    *this = ::std::move(from);
  }

  inline ImportRegion& operator=(ImportRegion&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ImportRegion& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ImportRegion* internal_default_instance() {
    return reinterpret_cast<const ImportRegion*>(
               &_ImportRegion_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(ImportRegion* other);
  friend void swap(ImportRegion& a, ImportRegion& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ImportRegion* New() const final {
    return CreateMaybeMessage<ImportRegion>(NULL);
  }

  ImportRegion* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ImportRegion>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ImportRegion& from);
  void MergeFrom(const ImportRegion& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ImportRegion* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string contents = 5;
  int contents_size() const;
  void clear_contents();
  static const int kContentsFieldNumber = 5;
  const ::std::string& contents(int index) const;
  ::std::string* mutable_contents(int index);
  void set_contents(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_contents(int index, ::std::string&& value);
  #endif
  void set_contents(int index, const char* value);
  void set_contents(int index, const char* value, size_t size);
  ::std::string* add_contents();
  void add_contents(const ::std::string& value);
  #if LANG_CXX11
  void add_contents(::std::string&& value);
  #endif
  void add_contents(const char* value);
  void add_contents(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& contents() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_contents();

  // string directory = 3;
  void clear_directory();
  static const int kDirectoryFieldNumber = 3;
  const ::std::string& directory() const;
  void set_directory(const ::std::string& value);
  #if LANG_CXX11
  void set_directory(::std::string&& value);
  #endif
  void set_directory(const char* value);
  void set_directory(const char* value, size_t size);
  ::std::string* mutable_directory();
  ::std::string* release_directory();
  void set_allocated_directory(::std::string* directory);

  // string file = 4;
  void clear_file();
  static const int kFileFieldNumber = 4;
  const ::std::string& file() const;
  void set_file(const ::std::string& value);
  #if LANG_CXX11
  void set_file(::std::string&& value);
  #endif
  void set_file(const char* value);
  void set_file(const char* value, size_t size);
  ::std::string* mutable_file();
  ::std::string* release_file();
  void set_allocated_file(::std::string* file);

  // sfixed32 group_id = 1;
  void clear_group_id();
  static const int kGroupIdFieldNumber = 1;
  ::google::protobuf::int32 group_id() const;
  void set_group_id(::google::protobuf::int32 value);

  // .CARTA.FileType type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::CARTA::FileType type() const;
  void set_type(::CARTA::FileType value);

  // @@protoc_insertion_point(class_scope:CARTA.ImportRegion)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> contents_;
  ::google::protobuf::internal::ArenaStringPtr directory_;
  ::google::protobuf::internal::ArenaStringPtr file_;
  ::google::protobuf::int32 group_id_;
  int type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_import_5fregion_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ImportRegionAck_RegionsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<ImportRegionAck_RegionsEntry_DoNotUse, 
    ::google::protobuf::int32, ::CARTA::RegionInfo,
    ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<ImportRegionAck_RegionsEntry_DoNotUse, 
    ::google::protobuf::int32, ::CARTA::RegionInfo,
    ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  ImportRegionAck_RegionsEntry_DoNotUse();
  ImportRegionAck_RegionsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const ImportRegionAck_RegionsEntry_DoNotUse& other);
  static const ImportRegionAck_RegionsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const ImportRegionAck_RegionsEntry_DoNotUse*>(&_ImportRegionAck_RegionsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class ImportRegionAck_RegionStylesEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<ImportRegionAck_RegionStylesEntry_DoNotUse, 
    ::google::protobuf::int32, ::CARTA::RegionStyle,
    ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<ImportRegionAck_RegionStylesEntry_DoNotUse, 
    ::google::protobuf::int32, ::CARTA::RegionStyle,
    ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  ImportRegionAck_RegionStylesEntry_DoNotUse();
  ImportRegionAck_RegionStylesEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const ImportRegionAck_RegionStylesEntry_DoNotUse& other);
  static const ImportRegionAck_RegionStylesEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const ImportRegionAck_RegionStylesEntry_DoNotUse*>(&_ImportRegionAck_RegionStylesEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class ImportRegionAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CARTA.ImportRegionAck) */ {
 public:
  ImportRegionAck();
  virtual ~ImportRegionAck();

  ImportRegionAck(const ImportRegionAck& from);

  inline ImportRegionAck& operator=(const ImportRegionAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ImportRegionAck(ImportRegionAck&& from) noexcept
    : ImportRegionAck() {
    *this = ::std::move(from);
  }

  inline ImportRegionAck& operator=(ImportRegionAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ImportRegionAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ImportRegionAck* internal_default_instance() {
    return reinterpret_cast<const ImportRegionAck*>(
               &_ImportRegionAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(ImportRegionAck* other);
  friend void swap(ImportRegionAck& a, ImportRegionAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ImportRegionAck* New() const final {
    return CreateMaybeMessage<ImportRegionAck>(NULL);
  }

  ImportRegionAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ImportRegionAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ImportRegionAck& from);
  void MergeFrom(const ImportRegionAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ImportRegionAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<sfixed32, .CARTA.RegionInfo> regions = 3;
  int regions_size() const;
  void clear_regions();
  static const int kRegionsFieldNumber = 3;
  const ::google::protobuf::Map< ::google::protobuf::int32, ::CARTA::RegionInfo >&
      regions() const;
  ::google::protobuf::Map< ::google::protobuf::int32, ::CARTA::RegionInfo >*
      mutable_regions();

  // map<sfixed32, .CARTA.RegionStyle> region_styles = 4;
  int region_styles_size() const;
  void clear_region_styles();
  static const int kRegionStylesFieldNumber = 4;
  const ::google::protobuf::Map< ::google::protobuf::int32, ::CARTA::RegionStyle >&
      region_styles() const;
  ::google::protobuf::Map< ::google::protobuf::int32, ::CARTA::RegionStyle >*
      mutable_region_styles();

  // string message = 2;
  void clear_message();
  static const int kMessageFieldNumber = 2;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // bool success = 1;
  void clear_success();
  static const int kSuccessFieldNumber = 1;
  bool success() const;
  void set_success(bool value);

  // @@protoc_insertion_point(class_scope:CARTA.ImportRegionAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      ImportRegionAck_RegionsEntry_DoNotUse,
      ::google::protobuf::int32, ::CARTA::RegionInfo,
      ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > regions_;
  ::google::protobuf::internal::MapField<
      ImportRegionAck_RegionStylesEntry_DoNotUse,
      ::google::protobuf::int32, ::CARTA::RegionStyle,
      ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > region_styles_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  bool success_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_import_5fregion_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ImportRegion

// sfixed32 group_id = 1;
inline void ImportRegion::clear_group_id() {
  group_id_ = 0;
}
inline ::google::protobuf::int32 ImportRegion::group_id() const {
  // @@protoc_insertion_point(field_get:CARTA.ImportRegion.group_id)
  return group_id_;
}
inline void ImportRegion::set_group_id(::google::protobuf::int32 value) {
  
  group_id_ = value;
  // @@protoc_insertion_point(field_set:CARTA.ImportRegion.group_id)
}

// .CARTA.FileType type = 2;
inline void ImportRegion::clear_type() {
  type_ = 0;
}
inline ::CARTA::FileType ImportRegion::type() const {
  // @@protoc_insertion_point(field_get:CARTA.ImportRegion.type)
  return static_cast< ::CARTA::FileType >(type_);
}
inline void ImportRegion::set_type(::CARTA::FileType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:CARTA.ImportRegion.type)
}

// string directory = 3;
inline void ImportRegion::clear_directory() {
  directory_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ImportRegion::directory() const {
  // @@protoc_insertion_point(field_get:CARTA.ImportRegion.directory)
  return directory_.GetNoArena();
}
inline void ImportRegion::set_directory(const ::std::string& value) {
  
  directory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CARTA.ImportRegion.directory)
}
#if LANG_CXX11
inline void ImportRegion::set_directory(::std::string&& value) {
  
  directory_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CARTA.ImportRegion.directory)
}
#endif
inline void ImportRegion::set_directory(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  directory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CARTA.ImportRegion.directory)
}
inline void ImportRegion::set_directory(const char* value, size_t size) {
  
  directory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CARTA.ImportRegion.directory)
}
inline ::std::string* ImportRegion::mutable_directory() {
  
  // @@protoc_insertion_point(field_mutable:CARTA.ImportRegion.directory)
  return directory_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ImportRegion::release_directory() {
  // @@protoc_insertion_point(field_release:CARTA.ImportRegion.directory)
  
  return directory_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ImportRegion::set_allocated_directory(::std::string* directory) {
  if (directory != NULL) {
    
  } else {
    
  }
  directory_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), directory);
  // @@protoc_insertion_point(field_set_allocated:CARTA.ImportRegion.directory)
}

// string file = 4;
inline void ImportRegion::clear_file() {
  file_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ImportRegion::file() const {
  // @@protoc_insertion_point(field_get:CARTA.ImportRegion.file)
  return file_.GetNoArena();
}
inline void ImportRegion::set_file(const ::std::string& value) {
  
  file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CARTA.ImportRegion.file)
}
#if LANG_CXX11
inline void ImportRegion::set_file(::std::string&& value) {
  
  file_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CARTA.ImportRegion.file)
}
#endif
inline void ImportRegion::set_file(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CARTA.ImportRegion.file)
}
inline void ImportRegion::set_file(const char* value, size_t size) {
  
  file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CARTA.ImportRegion.file)
}
inline ::std::string* ImportRegion::mutable_file() {
  
  // @@protoc_insertion_point(field_mutable:CARTA.ImportRegion.file)
  return file_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ImportRegion::release_file() {
  // @@protoc_insertion_point(field_release:CARTA.ImportRegion.file)
  
  return file_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ImportRegion::set_allocated_file(::std::string* file) {
  if (file != NULL) {
    
  } else {
    
  }
  file_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file);
  // @@protoc_insertion_point(field_set_allocated:CARTA.ImportRegion.file)
}

// repeated string contents = 5;
inline int ImportRegion::contents_size() const {
  return contents_.size();
}
inline void ImportRegion::clear_contents() {
  contents_.Clear();
}
inline const ::std::string& ImportRegion::contents(int index) const {
  // @@protoc_insertion_point(field_get:CARTA.ImportRegion.contents)
  return contents_.Get(index);
}
inline ::std::string* ImportRegion::mutable_contents(int index) {
  // @@protoc_insertion_point(field_mutable:CARTA.ImportRegion.contents)
  return contents_.Mutable(index);
}
inline void ImportRegion::set_contents(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:CARTA.ImportRegion.contents)
  contents_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ImportRegion::set_contents(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:CARTA.ImportRegion.contents)
  contents_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ImportRegion::set_contents(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  contents_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CARTA.ImportRegion.contents)
}
inline void ImportRegion::set_contents(int index, const char* value, size_t size) {
  contents_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CARTA.ImportRegion.contents)
}
inline ::std::string* ImportRegion::add_contents() {
  // @@protoc_insertion_point(field_add_mutable:CARTA.ImportRegion.contents)
  return contents_.Add();
}
inline void ImportRegion::add_contents(const ::std::string& value) {
  contents_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CARTA.ImportRegion.contents)
}
#if LANG_CXX11
inline void ImportRegion::add_contents(::std::string&& value) {
  contents_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:CARTA.ImportRegion.contents)
}
#endif
inline void ImportRegion::add_contents(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  contents_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CARTA.ImportRegion.contents)
}
inline void ImportRegion::add_contents(const char* value, size_t size) {
  contents_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CARTA.ImportRegion.contents)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ImportRegion::contents() const {
  // @@protoc_insertion_point(field_list:CARTA.ImportRegion.contents)
  return contents_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ImportRegion::mutable_contents() {
  // @@protoc_insertion_point(field_mutable_list:CARTA.ImportRegion.contents)
  return &contents_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// ImportRegionAck

// bool success = 1;
inline void ImportRegionAck::clear_success() {
  success_ = false;
}
inline bool ImportRegionAck::success() const {
  // @@protoc_insertion_point(field_get:CARTA.ImportRegionAck.success)
  return success_;
}
inline void ImportRegionAck::set_success(bool value) {
  
  success_ = value;
  // @@protoc_insertion_point(field_set:CARTA.ImportRegionAck.success)
}

// string message = 2;
inline void ImportRegionAck::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ImportRegionAck::message() const {
  // @@protoc_insertion_point(field_get:CARTA.ImportRegionAck.message)
  return message_.GetNoArena();
}
inline void ImportRegionAck::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CARTA.ImportRegionAck.message)
}
#if LANG_CXX11
inline void ImportRegionAck::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CARTA.ImportRegionAck.message)
}
#endif
inline void ImportRegionAck::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CARTA.ImportRegionAck.message)
}
inline void ImportRegionAck::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CARTA.ImportRegionAck.message)
}
inline ::std::string* ImportRegionAck::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:CARTA.ImportRegionAck.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ImportRegionAck::release_message() {
  // @@protoc_insertion_point(field_release:CARTA.ImportRegionAck.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ImportRegionAck::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:CARTA.ImportRegionAck.message)
}

// map<sfixed32, .CARTA.RegionInfo> regions = 3;
inline int ImportRegionAck::regions_size() const {
  return regions_.size();
}
inline const ::google::protobuf::Map< ::google::protobuf::int32, ::CARTA::RegionInfo >&
ImportRegionAck::regions() const {
  // @@protoc_insertion_point(field_map:CARTA.ImportRegionAck.regions)
  return regions_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int32, ::CARTA::RegionInfo >*
ImportRegionAck::mutable_regions() {
  // @@protoc_insertion_point(field_mutable_map:CARTA.ImportRegionAck.regions)
  return regions_.MutableMap();
}

// map<sfixed32, .CARTA.RegionStyle> region_styles = 4;
inline int ImportRegionAck::region_styles_size() const {
  return region_styles_.size();
}
inline const ::google::protobuf::Map< ::google::protobuf::int32, ::CARTA::RegionStyle >&
ImportRegionAck::region_styles() const {
  // @@protoc_insertion_point(field_map:CARTA.ImportRegionAck.region_styles)
  return region_styles_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int32, ::CARTA::RegionStyle >*
ImportRegionAck::mutable_region_styles() {
  // @@protoc_insertion_point(field_mutable_map:CARTA.ImportRegionAck.region_styles)
  return region_styles_.MutableMap();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace CARTA

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_import_5fregion_2eproto
