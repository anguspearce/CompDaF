// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: moment_request.proto

#include "moment_request.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_defs_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_defs_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FloatBounds;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_defs_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_IntBounds;
}  // namespace protobuf_defs_2eproto
namespace protobuf_open_5ffile_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_open_5ffile_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_OpenFileAck;
}  // namespace protobuf_open_5ffile_2eproto
namespace CARTA {
class MomentRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MomentRequest>
      _instance;
} _MomentRequest_default_instance_;
class MomentResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MomentResponse>
      _instance;
} _MomentResponse_default_instance_;
class MomentProgressDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MomentProgress>
      _instance;
} _MomentProgress_default_instance_;
}  // namespace CARTA
namespace protobuf_moment_5frequest_2eproto {
static void InitDefaultsMomentRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CARTA::_MomentRequest_default_instance_;
    new (ptr) ::CARTA::MomentRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CARTA::MomentRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_MomentRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsMomentRequest}, {
      &protobuf_defs_2eproto::scc_info_IntBounds.base,
      &protobuf_defs_2eproto::scc_info_FloatBounds.base,}};

static void InitDefaultsMomentResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CARTA::_MomentResponse_default_instance_;
    new (ptr) ::CARTA::MomentResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CARTA::MomentResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MomentResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMomentResponse}, {
      &protobuf_open_5ffile_2eproto::scc_info_OpenFileAck.base,}};

static void InitDefaultsMomentProgress() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CARTA::_MomentProgress_default_instance_;
    new (ptr) ::CARTA::MomentProgress();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CARTA::MomentProgress::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MomentProgress =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMomentProgress}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_MomentRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MomentResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MomentProgress.base);
}

::google::protobuf::Metadata file_level_metadata[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::MomentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::MomentRequest, file_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::MomentRequest, moments_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::MomentRequest, axis_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::MomentRequest, region_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::MomentRequest, spectral_range_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::MomentRequest, mask_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::MomentRequest, pixel_range_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::MomentResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::MomentResponse, success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::MomentResponse, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::MomentResponse, open_file_acks_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::MomentResponse, cancel_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::MomentProgress, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::MomentProgress, file_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::MomentProgress, progress_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::CARTA::MomentRequest)},
  { 12, -1, sizeof(::CARTA::MomentResponse)},
  { 21, -1, sizeof(::CARTA::MomentProgress)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::CARTA::_MomentRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::CARTA::_MomentResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::CARTA::_MomentProgress_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "moment_request.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\024moment_request.proto\022\005CARTA\032\ndefs.prot"
      "o\032\013enums.proto\032\017open_file.proto\"\350\001\n\rMome"
      "ntRequest\022\017\n\007file_id\030\001 \001(\017\022\036\n\007moments\030\002 "
      "\003(\0162\r.CARTA.Moment\022\037\n\004axis\030\003 \001(\0162\021.CARTA"
      ".MomentAxis\022\021\n\tregion_id\030\004 \001(\017\022(\n\016spectr"
      "al_range\030\005 \001(\0132\020.CARTA.IntBounds\022\037\n\004mask"
      "\030\006 \001(\0162\021.CARTA.MomentMask\022\'\n\013pixel_range"
      "\030\007 \001(\0132\022.CARTA.FloatBounds\"n\n\016MomentResp"
      "onse\022\017\n\007success\030\001 \001(\010\022\017\n\007message\030\002 \001(\t\022*"
      "\n\016open_file_acks\030\003 \003(\0132\022.CARTA.OpenFileA"
      "ck\022\016\n\006cancel\030\004 \001(\010\"3\n\016MomentProgress\022\017\n\007"
      "file_id\030\001 \001(\017\022\020\n\010progress\030\002 \001(\002b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 479);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "moment_request.proto", &protobuf_RegisterTypes);
  ::protobuf_defs_2eproto::AddDescriptors();
  ::protobuf_enums_2eproto::AddDescriptors();
  ::protobuf_open_5ffile_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_moment_5frequest_2eproto
namespace CARTA {

// ===================================================================

void MomentRequest::InitAsDefaultInstance() {
  ::CARTA::_MomentRequest_default_instance_._instance.get_mutable()->spectral_range_ = const_cast< ::CARTA::IntBounds*>(
      ::CARTA::IntBounds::internal_default_instance());
  ::CARTA::_MomentRequest_default_instance_._instance.get_mutable()->pixel_range_ = const_cast< ::CARTA::FloatBounds*>(
      ::CARTA::FloatBounds::internal_default_instance());
}
void MomentRequest::clear_spectral_range() {
  if (GetArenaNoVirtual() == NULL && spectral_range_ != NULL) {
    delete spectral_range_;
  }
  spectral_range_ = NULL;
}
void MomentRequest::clear_pixel_range() {
  if (GetArenaNoVirtual() == NULL && pixel_range_ != NULL) {
    delete pixel_range_;
  }
  pixel_range_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MomentRequest::kFileIdFieldNumber;
const int MomentRequest::kMomentsFieldNumber;
const int MomentRequest::kAxisFieldNumber;
const int MomentRequest::kRegionIdFieldNumber;
const int MomentRequest::kSpectralRangeFieldNumber;
const int MomentRequest::kMaskFieldNumber;
const int MomentRequest::kPixelRangeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MomentRequest::MomentRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_moment_5frequest_2eproto::scc_info_MomentRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CARTA.MomentRequest)
}
MomentRequest::MomentRequest(const MomentRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      moments_(from.moments_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_spectral_range()) {
    spectral_range_ = new ::CARTA::IntBounds(*from.spectral_range_);
  } else {
    spectral_range_ = NULL;
  }
  if (from.has_pixel_range()) {
    pixel_range_ = new ::CARTA::FloatBounds(*from.pixel_range_);
  } else {
    pixel_range_ = NULL;
  }
  ::memcpy(&file_id_, &from.file_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&mask_) -
    reinterpret_cast<char*>(&file_id_)) + sizeof(mask_));
  // @@protoc_insertion_point(copy_constructor:CARTA.MomentRequest)
}

void MomentRequest::SharedCtor() {
  ::memset(&spectral_range_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mask_) -
      reinterpret_cast<char*>(&spectral_range_)) + sizeof(mask_));
}

MomentRequest::~MomentRequest() {
  // @@protoc_insertion_point(destructor:CARTA.MomentRequest)
  SharedDtor();
}

void MomentRequest::SharedDtor() {
  if (this != internal_default_instance()) delete spectral_range_;
  if (this != internal_default_instance()) delete pixel_range_;
}

void MomentRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MomentRequest::descriptor() {
  ::protobuf_moment_5frequest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_moment_5frequest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MomentRequest& MomentRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_moment_5frequest_2eproto::scc_info_MomentRequest.base);
  return *internal_default_instance();
}


void MomentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CARTA.MomentRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  moments_.Clear();
  if (GetArenaNoVirtual() == NULL && spectral_range_ != NULL) {
    delete spectral_range_;
  }
  spectral_range_ = NULL;
  if (GetArenaNoVirtual() == NULL && pixel_range_ != NULL) {
    delete pixel_range_;
  }
  pixel_range_ = NULL;
  ::memset(&file_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mask_) -
      reinterpret_cast<char*>(&file_id_)) + sizeof(mask_));
  _internal_metadata_.Clear();
}

bool MomentRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CARTA.MomentRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // sfixed32 file_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, &file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CARTA.Moment moments = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          ::google::protobuf::uint32 length;
          DO_(input->ReadVarint32(&length));
          ::google::protobuf::io::CodedInputStream::Limit limit = input->PushLimit(static_cast<int>(length));
          while (input->BytesUntilLimit() > 0) {
            int value;
            DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
            add_moments(static_cast< ::CARTA::Moment >(value));
          }
          input->PopLimit(limit);
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          add_moments(static_cast< ::CARTA::Moment >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .CARTA.MomentAxis axis = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_axis(static_cast< ::CARTA::MomentAxis >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sfixed32 region_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, &region_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .CARTA.IntBounds spectral_range = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_spectral_range()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .CARTA.MomentMask mask = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_mask(static_cast< ::CARTA::MomentMask >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .CARTA.FloatBounds pixel_range = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pixel_range()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CARTA.MomentRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CARTA.MomentRequest)
  return false;
#undef DO_
}

void MomentRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CARTA.MomentRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sfixed32 file_id = 1;
  if (this->file_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32(1, this->file_id(), output);
  }

  // repeated .CARTA.Moment moments = 2;
  if (this->moments_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      output);
    output->WriteVarint32(
        static_cast< ::google::protobuf::uint32>(_moments_cached_byte_size_));
  }
  for (int i = 0, n = this->moments_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnumNoTag(
      this->moments(i), output);
  }

  // .CARTA.MomentAxis axis = 3;
  if (this->axis() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->axis(), output);
  }

  // sfixed32 region_id = 4;
  if (this->region_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32(4, this->region_id(), output);
  }

  // .CARTA.IntBounds spectral_range = 5;
  if (this->has_spectral_range()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_spectral_range(), output);
  }

  // .CARTA.MomentMask mask = 6;
  if (this->mask() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->mask(), output);
  }

  // .CARTA.FloatBounds pixel_range = 7;
  if (this->has_pixel_range()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_pixel_range(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CARTA.MomentRequest)
}

::google::protobuf::uint8* MomentRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CARTA.MomentRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sfixed32 file_id = 1;
  if (this->file_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed32ToArray(1, this->file_id(), target);
  }

  // repeated .CARTA.Moment moments = 2;
  if (this->moments_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(      static_cast< ::google::protobuf::uint32>(
            _moments_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumNoTagToArray(
      this->moments_, target);
  }

  // .CARTA.MomentAxis axis = 3;
  if (this->axis() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->axis(), target);
  }

  // sfixed32 region_id = 4;
  if (this->region_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed32ToArray(4, this->region_id(), target);
  }

  // .CARTA.IntBounds spectral_range = 5;
  if (this->has_spectral_range()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_spectral_range(), deterministic, target);
  }

  // .CARTA.MomentMask mask = 6;
  if (this->mask() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->mask(), target);
  }

  // .CARTA.FloatBounds pixel_range = 7;
  if (this->has_pixel_range()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_pixel_range(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CARTA.MomentRequest)
  return target;
}

size_t MomentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CARTA.MomentRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .CARTA.Moment moments = 2;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->moments_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->moments(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _moments_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // .CARTA.IntBounds spectral_range = 5;
  if (this->has_spectral_range()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *spectral_range_);
  }

  // .CARTA.FloatBounds pixel_range = 7;
  if (this->has_pixel_range()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pixel_range_);
  }

  // sfixed32 file_id = 1;
  if (this->file_id() != 0) {
    total_size += 1 + 4;
  }

  // .CARTA.MomentAxis axis = 3;
  if (this->axis() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->axis());
  }

  // sfixed32 region_id = 4;
  if (this->region_id() != 0) {
    total_size += 1 + 4;
  }

  // .CARTA.MomentMask mask = 6;
  if (this->mask() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->mask());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MomentRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CARTA.MomentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const MomentRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MomentRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CARTA.MomentRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CARTA.MomentRequest)
    MergeFrom(*source);
  }
}

void MomentRequest::MergeFrom(const MomentRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CARTA.MomentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  moments_.MergeFrom(from.moments_);
  if (from.has_spectral_range()) {
    mutable_spectral_range()->::CARTA::IntBounds::MergeFrom(from.spectral_range());
  }
  if (from.has_pixel_range()) {
    mutable_pixel_range()->::CARTA::FloatBounds::MergeFrom(from.pixel_range());
  }
  if (from.file_id() != 0) {
    set_file_id(from.file_id());
  }
  if (from.axis() != 0) {
    set_axis(from.axis());
  }
  if (from.region_id() != 0) {
    set_region_id(from.region_id());
  }
  if (from.mask() != 0) {
    set_mask(from.mask());
  }
}

void MomentRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CARTA.MomentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MomentRequest::CopyFrom(const MomentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CARTA.MomentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MomentRequest::IsInitialized() const {
  return true;
}

void MomentRequest::Swap(MomentRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MomentRequest::InternalSwap(MomentRequest* other) {
  using std::swap;
  moments_.InternalSwap(&other->moments_);
  swap(spectral_range_, other->spectral_range_);
  swap(pixel_range_, other->pixel_range_);
  swap(file_id_, other->file_id_);
  swap(axis_, other->axis_);
  swap(region_id_, other->region_id_);
  swap(mask_, other->mask_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MomentRequest::GetMetadata() const {
  protobuf_moment_5frequest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_moment_5frequest_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MomentResponse::InitAsDefaultInstance() {
}
void MomentResponse::clear_open_file_acks() {
  open_file_acks_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MomentResponse::kSuccessFieldNumber;
const int MomentResponse::kMessageFieldNumber;
const int MomentResponse::kOpenFileAcksFieldNumber;
const int MomentResponse::kCancelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MomentResponse::MomentResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_moment_5frequest_2eproto::scc_info_MomentResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CARTA.MomentResponse)
}
MomentResponse::MomentResponse(const MomentResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      open_file_acks_(from.open_file_acks_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  ::memcpy(&success_, &from.success_,
    static_cast<size_t>(reinterpret_cast<char*>(&cancel_) -
    reinterpret_cast<char*>(&success_)) + sizeof(cancel_));
  // @@protoc_insertion_point(copy_constructor:CARTA.MomentResponse)
}

void MomentResponse::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&success_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cancel_) -
      reinterpret_cast<char*>(&success_)) + sizeof(cancel_));
}

MomentResponse::~MomentResponse() {
  // @@protoc_insertion_point(destructor:CARTA.MomentResponse)
  SharedDtor();
}

void MomentResponse::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MomentResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MomentResponse::descriptor() {
  ::protobuf_moment_5frequest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_moment_5frequest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MomentResponse& MomentResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_moment_5frequest_2eproto::scc_info_MomentResponse.base);
  return *internal_default_instance();
}


void MomentResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CARTA.MomentResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  open_file_acks_.Clear();
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&success_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cancel_) -
      reinterpret_cast<char*>(&success_)) + sizeof(cancel_));
  _internal_metadata_.Clear();
}

bool MomentResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CARTA.MomentResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool success = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CARTA.MomentResponse.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CARTA.OpenFileAck open_file_acks = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_open_file_acks()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool cancel = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &cancel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CARTA.MomentResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CARTA.MomentResponse)
  return false;
#undef DO_
}

void MomentResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CARTA.MomentResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CARTA.MomentResponse.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  // repeated .CARTA.OpenFileAck open_file_acks = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->open_file_acks_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->open_file_acks(static_cast<int>(i)),
      output);
  }

  // bool cancel = 4;
  if (this->cancel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->cancel(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CARTA.MomentResponse)
}

::google::protobuf::uint8* MomentResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CARTA.MomentResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CARTA.MomentResponse.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  // repeated .CARTA.OpenFileAck open_file_acks = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->open_file_acks_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->open_file_acks(static_cast<int>(i)), deterministic, target);
  }

  // bool cancel = 4;
  if (this->cancel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->cancel(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CARTA.MomentResponse)
  return target;
}

size_t MomentResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CARTA.MomentResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .CARTA.OpenFileAck open_file_acks = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->open_file_acks_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->open_file_acks(static_cast<int>(i)));
    }
  }

  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // bool success = 1;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  // bool cancel = 4;
  if (this->cancel() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MomentResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CARTA.MomentResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const MomentResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MomentResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CARTA.MomentResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CARTA.MomentResponse)
    MergeFrom(*source);
  }
}

void MomentResponse::MergeFrom(const MomentResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CARTA.MomentResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  open_file_acks_.MergeFrom(from.open_file_acks_);
  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.success() != 0) {
    set_success(from.success());
  }
  if (from.cancel() != 0) {
    set_cancel(from.cancel());
  }
}

void MomentResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CARTA.MomentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MomentResponse::CopyFrom(const MomentResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CARTA.MomentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MomentResponse::IsInitialized() const {
  return true;
}

void MomentResponse::Swap(MomentResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MomentResponse::InternalSwap(MomentResponse* other) {
  using std::swap;
  CastToBase(&open_file_acks_)->InternalSwap(CastToBase(&other->open_file_acks_));
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(success_, other->success_);
  swap(cancel_, other->cancel_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MomentResponse::GetMetadata() const {
  protobuf_moment_5frequest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_moment_5frequest_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MomentProgress::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MomentProgress::kFileIdFieldNumber;
const int MomentProgress::kProgressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MomentProgress::MomentProgress()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_moment_5frequest_2eproto::scc_info_MomentProgress.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CARTA.MomentProgress)
}
MomentProgress::MomentProgress(const MomentProgress& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&file_id_, &from.file_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&progress_) -
    reinterpret_cast<char*>(&file_id_)) + sizeof(progress_));
  // @@protoc_insertion_point(copy_constructor:CARTA.MomentProgress)
}

void MomentProgress::SharedCtor() {
  ::memset(&file_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&progress_) -
      reinterpret_cast<char*>(&file_id_)) + sizeof(progress_));
}

MomentProgress::~MomentProgress() {
  // @@protoc_insertion_point(destructor:CARTA.MomentProgress)
  SharedDtor();
}

void MomentProgress::SharedDtor() {
}

void MomentProgress::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MomentProgress::descriptor() {
  ::protobuf_moment_5frequest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_moment_5frequest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MomentProgress& MomentProgress::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_moment_5frequest_2eproto::scc_info_MomentProgress.base);
  return *internal_default_instance();
}


void MomentProgress::Clear() {
// @@protoc_insertion_point(message_clear_start:CARTA.MomentProgress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&file_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&progress_) -
      reinterpret_cast<char*>(&file_id_)) + sizeof(progress_));
  _internal_metadata_.Clear();
}

bool MomentProgress::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CARTA.MomentProgress)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // sfixed32 file_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, &file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float progress = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &progress_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CARTA.MomentProgress)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CARTA.MomentProgress)
  return false;
#undef DO_
}

void MomentProgress::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CARTA.MomentProgress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sfixed32 file_id = 1;
  if (this->file_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32(1, this->file_id(), output);
  }

  // float progress = 2;
  if (this->progress() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->progress(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CARTA.MomentProgress)
}

::google::protobuf::uint8* MomentProgress::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CARTA.MomentProgress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sfixed32 file_id = 1;
  if (this->file_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed32ToArray(1, this->file_id(), target);
  }

  // float progress = 2;
  if (this->progress() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->progress(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CARTA.MomentProgress)
  return target;
}

size_t MomentProgress::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CARTA.MomentProgress)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // sfixed32 file_id = 1;
  if (this->file_id() != 0) {
    total_size += 1 + 4;
  }

  // float progress = 2;
  if (this->progress() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MomentProgress::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CARTA.MomentProgress)
  GOOGLE_DCHECK_NE(&from, this);
  const MomentProgress* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MomentProgress>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CARTA.MomentProgress)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CARTA.MomentProgress)
    MergeFrom(*source);
  }
}

void MomentProgress::MergeFrom(const MomentProgress& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CARTA.MomentProgress)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.file_id() != 0) {
    set_file_id(from.file_id());
  }
  if (from.progress() != 0) {
    set_progress(from.progress());
  }
}

void MomentProgress::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CARTA.MomentProgress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MomentProgress::CopyFrom(const MomentProgress& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CARTA.MomentProgress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MomentProgress::IsInitialized() const {
  return true;
}

void MomentProgress::Swap(MomentProgress* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MomentProgress::InternalSwap(MomentProgress* other) {
  using std::swap;
  swap(file_id_, other->file_id_);
  swap(progress_, other->progress_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MomentProgress::GetMetadata() const {
  protobuf_moment_5frequest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_moment_5frequest_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace CARTA
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CARTA::MomentRequest* Arena::CreateMaybeMessage< ::CARTA::MomentRequest >(Arena* arena) {
  return Arena::CreateInternal< ::CARTA::MomentRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CARTA::MomentResponse* Arena::CreateMaybeMessage< ::CARTA::MomentResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CARTA::MomentResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CARTA::MomentProgress* Arena::CreateMaybeMessage< ::CARTA::MomentProgress >(Arena* arena) {
  return Arena::CreateInternal< ::CARTA::MomentProgress >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
