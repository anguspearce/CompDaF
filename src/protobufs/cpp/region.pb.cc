// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: region.proto

#include "region.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_defs_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_defs_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_RegionInfo;
}  // namespace protobuf_defs_2eproto
namespace CARTA {
class SetRegionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetRegion>
      _instance;
} _SetRegion_default_instance_;
class SetRegionAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetRegionAck>
      _instance;
} _SetRegionAck_default_instance_;
class RemoveRegionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RemoveRegion>
      _instance;
} _RemoveRegion_default_instance_;
}  // namespace CARTA
namespace protobuf_region_2eproto {
static void InitDefaultsSetRegion() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CARTA::_SetRegion_default_instance_;
    new (ptr) ::CARTA::SetRegion();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CARTA::SetRegion::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SetRegion =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSetRegion}, {
      &protobuf_defs_2eproto::scc_info_RegionInfo.base,}};

static void InitDefaultsSetRegionAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CARTA::_SetRegionAck_default_instance_;
    new (ptr) ::CARTA::SetRegionAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CARTA::SetRegionAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SetRegionAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSetRegionAck}, {}};

static void InitDefaultsRemoveRegion() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CARTA::_RemoveRegion_default_instance_;
    new (ptr) ::CARTA::RemoveRegion();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CARTA::RemoveRegion::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RemoveRegion =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRemoveRegion}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_SetRegion.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetRegionAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RemoveRegion.base);
}

::google::protobuf::Metadata file_level_metadata[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::SetRegion, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::SetRegion, file_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::SetRegion, region_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::SetRegion, region_info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::SetRegionAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::SetRegionAck, success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::SetRegionAck, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::SetRegionAck, region_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::RemoveRegion, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::RemoveRegion, region_id_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::CARTA::SetRegion)},
  { 8, -1, sizeof(::CARTA::SetRegionAck)},
  { 16, -1, sizeof(::CARTA::RemoveRegion)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::CARTA::_SetRegion_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::CARTA::_SetRegionAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::CARTA::_RemoveRegion_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "region.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\014region.proto\022\005CARTA\032\ndefs.proto\"W\n\tSet"
      "Region\022\017\n\007file_id\030\001 \001(\017\022\021\n\tregion_id\030\002 \001"
      "(\017\022&\n\013region_info\030\003 \001(\0132\021.CARTA.RegionIn"
      "fo\"C\n\014SetRegionAck\022\017\n\007success\030\001 \001(\010\022\017\n\007m"
      "essage\030\002 \001(\t\022\021\n\tregion_id\030\003 \001(\017\"!\n\014Remov"
      "eRegion\022\021\n\tregion_id\030\001 \001(\017b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 234);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "region.proto", &protobuf_RegisterTypes);
  ::protobuf_defs_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_region_2eproto
namespace CARTA {

// ===================================================================

void SetRegion::InitAsDefaultInstance() {
  ::CARTA::_SetRegion_default_instance_._instance.get_mutable()->region_info_ = const_cast< ::CARTA::RegionInfo*>(
      ::CARTA::RegionInfo::internal_default_instance());
}
void SetRegion::clear_region_info() {
  if (GetArenaNoVirtual() == NULL && region_info_ != NULL) {
    delete region_info_;
  }
  region_info_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetRegion::kFileIdFieldNumber;
const int SetRegion::kRegionIdFieldNumber;
const int SetRegion::kRegionInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetRegion::SetRegion()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_region_2eproto::scc_info_SetRegion.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CARTA.SetRegion)
}
SetRegion::SetRegion(const SetRegion& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_region_info()) {
    region_info_ = new ::CARTA::RegionInfo(*from.region_info_);
  } else {
    region_info_ = NULL;
  }
  ::memcpy(&file_id_, &from.file_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&region_id_) -
    reinterpret_cast<char*>(&file_id_)) + sizeof(region_id_));
  // @@protoc_insertion_point(copy_constructor:CARTA.SetRegion)
}

void SetRegion::SharedCtor() {
  ::memset(&region_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&region_id_) -
      reinterpret_cast<char*>(&region_info_)) + sizeof(region_id_));
}

SetRegion::~SetRegion() {
  // @@protoc_insertion_point(destructor:CARTA.SetRegion)
  SharedDtor();
}

void SetRegion::SharedDtor() {
  if (this != internal_default_instance()) delete region_info_;
}

void SetRegion::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SetRegion::descriptor() {
  ::protobuf_region_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_region_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetRegion& SetRegion::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_region_2eproto::scc_info_SetRegion.base);
  return *internal_default_instance();
}


void SetRegion::Clear() {
// @@protoc_insertion_point(message_clear_start:CARTA.SetRegion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && region_info_ != NULL) {
    delete region_info_;
  }
  region_info_ = NULL;
  ::memset(&file_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&region_id_) -
      reinterpret_cast<char*>(&file_id_)) + sizeof(region_id_));
  _internal_metadata_.Clear();
}

bool SetRegion::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CARTA.SetRegion)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // sfixed32 file_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, &file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sfixed32 region_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, &region_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .CARTA.RegionInfo region_info = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_region_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CARTA.SetRegion)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CARTA.SetRegion)
  return false;
#undef DO_
}

void SetRegion::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CARTA.SetRegion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sfixed32 file_id = 1;
  if (this->file_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32(1, this->file_id(), output);
  }

  // sfixed32 region_id = 2;
  if (this->region_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32(2, this->region_id(), output);
  }

  // .CARTA.RegionInfo region_info = 3;
  if (this->has_region_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_region_info(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CARTA.SetRegion)
}

::google::protobuf::uint8* SetRegion::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CARTA.SetRegion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sfixed32 file_id = 1;
  if (this->file_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed32ToArray(1, this->file_id(), target);
  }

  // sfixed32 region_id = 2;
  if (this->region_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed32ToArray(2, this->region_id(), target);
  }

  // .CARTA.RegionInfo region_info = 3;
  if (this->has_region_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_region_info(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CARTA.SetRegion)
  return target;
}

size_t SetRegion::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CARTA.SetRegion)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .CARTA.RegionInfo region_info = 3;
  if (this->has_region_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *region_info_);
  }

  // sfixed32 file_id = 1;
  if (this->file_id() != 0) {
    total_size += 1 + 4;
  }

  // sfixed32 region_id = 2;
  if (this->region_id() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetRegion::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CARTA.SetRegion)
  GOOGLE_DCHECK_NE(&from, this);
  const SetRegion* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetRegion>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CARTA.SetRegion)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CARTA.SetRegion)
    MergeFrom(*source);
  }
}

void SetRegion::MergeFrom(const SetRegion& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CARTA.SetRegion)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_region_info()) {
    mutable_region_info()->::CARTA::RegionInfo::MergeFrom(from.region_info());
  }
  if (from.file_id() != 0) {
    set_file_id(from.file_id());
  }
  if (from.region_id() != 0) {
    set_region_id(from.region_id());
  }
}

void SetRegion::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CARTA.SetRegion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetRegion::CopyFrom(const SetRegion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CARTA.SetRegion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetRegion::IsInitialized() const {
  return true;
}

void SetRegion::Swap(SetRegion* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetRegion::InternalSwap(SetRegion* other) {
  using std::swap;
  swap(region_info_, other->region_info_);
  swap(file_id_, other->file_id_);
  swap(region_id_, other->region_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SetRegion::GetMetadata() const {
  protobuf_region_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_region_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetRegionAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetRegionAck::kSuccessFieldNumber;
const int SetRegionAck::kMessageFieldNumber;
const int SetRegionAck::kRegionIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetRegionAck::SetRegionAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_region_2eproto::scc_info_SetRegionAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CARTA.SetRegionAck)
}
SetRegionAck::SetRegionAck(const SetRegionAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  ::memcpy(&success_, &from.success_,
    static_cast<size_t>(reinterpret_cast<char*>(&region_id_) -
    reinterpret_cast<char*>(&success_)) + sizeof(region_id_));
  // @@protoc_insertion_point(copy_constructor:CARTA.SetRegionAck)
}

void SetRegionAck::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&success_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&region_id_) -
      reinterpret_cast<char*>(&success_)) + sizeof(region_id_));
}

SetRegionAck::~SetRegionAck() {
  // @@protoc_insertion_point(destructor:CARTA.SetRegionAck)
  SharedDtor();
}

void SetRegionAck::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetRegionAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SetRegionAck::descriptor() {
  ::protobuf_region_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_region_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetRegionAck& SetRegionAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_region_2eproto::scc_info_SetRegionAck.base);
  return *internal_default_instance();
}


void SetRegionAck::Clear() {
// @@protoc_insertion_point(message_clear_start:CARTA.SetRegionAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&success_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&region_id_) -
      reinterpret_cast<char*>(&success_)) + sizeof(region_id_));
  _internal_metadata_.Clear();
}

bool SetRegionAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CARTA.SetRegionAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool success = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CARTA.SetRegionAck.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sfixed32 region_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, &region_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CARTA.SetRegionAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CARTA.SetRegionAck)
  return false;
#undef DO_
}

void SetRegionAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CARTA.SetRegionAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CARTA.SetRegionAck.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  // sfixed32 region_id = 3;
  if (this->region_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32(3, this->region_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CARTA.SetRegionAck)
}

::google::protobuf::uint8* SetRegionAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CARTA.SetRegionAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CARTA.SetRegionAck.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  // sfixed32 region_id = 3;
  if (this->region_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed32ToArray(3, this->region_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CARTA.SetRegionAck)
  return target;
}

size_t SetRegionAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CARTA.SetRegionAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // bool success = 1;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  // sfixed32 region_id = 3;
  if (this->region_id() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetRegionAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CARTA.SetRegionAck)
  GOOGLE_DCHECK_NE(&from, this);
  const SetRegionAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetRegionAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CARTA.SetRegionAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CARTA.SetRegionAck)
    MergeFrom(*source);
  }
}

void SetRegionAck::MergeFrom(const SetRegionAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CARTA.SetRegionAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.success() != 0) {
    set_success(from.success());
  }
  if (from.region_id() != 0) {
    set_region_id(from.region_id());
  }
}

void SetRegionAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CARTA.SetRegionAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetRegionAck::CopyFrom(const SetRegionAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CARTA.SetRegionAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetRegionAck::IsInitialized() const {
  return true;
}

void SetRegionAck::Swap(SetRegionAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetRegionAck::InternalSwap(SetRegionAck* other) {
  using std::swap;
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(success_, other->success_);
  swap(region_id_, other->region_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SetRegionAck::GetMetadata() const {
  protobuf_region_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_region_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RemoveRegion::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RemoveRegion::kRegionIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RemoveRegion::RemoveRegion()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_region_2eproto::scc_info_RemoveRegion.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CARTA.RemoveRegion)
}
RemoveRegion::RemoveRegion(const RemoveRegion& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  region_id_ = from.region_id_;
  // @@protoc_insertion_point(copy_constructor:CARTA.RemoveRegion)
}

void RemoveRegion::SharedCtor() {
  region_id_ = 0;
}

RemoveRegion::~RemoveRegion() {
  // @@protoc_insertion_point(destructor:CARTA.RemoveRegion)
  SharedDtor();
}

void RemoveRegion::SharedDtor() {
}

void RemoveRegion::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RemoveRegion::descriptor() {
  ::protobuf_region_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_region_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RemoveRegion& RemoveRegion::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_region_2eproto::scc_info_RemoveRegion.base);
  return *internal_default_instance();
}


void RemoveRegion::Clear() {
// @@protoc_insertion_point(message_clear_start:CARTA.RemoveRegion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  region_id_ = 0;
  _internal_metadata_.Clear();
}

bool RemoveRegion::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CARTA.RemoveRegion)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // sfixed32 region_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, &region_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CARTA.RemoveRegion)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CARTA.RemoveRegion)
  return false;
#undef DO_
}

void RemoveRegion::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CARTA.RemoveRegion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sfixed32 region_id = 1;
  if (this->region_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32(1, this->region_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CARTA.RemoveRegion)
}

::google::protobuf::uint8* RemoveRegion::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CARTA.RemoveRegion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sfixed32 region_id = 1;
  if (this->region_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed32ToArray(1, this->region_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CARTA.RemoveRegion)
  return target;
}

size_t RemoveRegion::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CARTA.RemoveRegion)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // sfixed32 region_id = 1;
  if (this->region_id() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveRegion::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CARTA.RemoveRegion)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveRegion* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RemoveRegion>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CARTA.RemoveRegion)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CARTA.RemoveRegion)
    MergeFrom(*source);
  }
}

void RemoveRegion::MergeFrom(const RemoveRegion& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CARTA.RemoveRegion)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.region_id() != 0) {
    set_region_id(from.region_id());
  }
}

void RemoveRegion::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CARTA.RemoveRegion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveRegion::CopyFrom(const RemoveRegion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CARTA.RemoveRegion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveRegion::IsInitialized() const {
  return true;
}

void RemoveRegion::Swap(RemoveRegion* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RemoveRegion::InternalSwap(RemoveRegion* other) {
  using std::swap;
  swap(region_id_, other->region_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RemoveRegion::GetMetadata() const {
  protobuf_region_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_region_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace CARTA
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CARTA::SetRegion* Arena::CreateMaybeMessage< ::CARTA::SetRegion >(Arena* arena) {
  return Arena::CreateInternal< ::CARTA::SetRegion >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CARTA::SetRegionAck* Arena::CreateMaybeMessage< ::CARTA::SetRegionAck >(Arena* arena) {
  return Arena::CreateInternal< ::CARTA::SetRegionAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CARTA::RemoveRegion* Arena::CreateMaybeMessage< ::CARTA::RemoveRegion >(Arena* arena) {
  return Arena::CreateInternal< ::CARTA::RemoveRegion >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
