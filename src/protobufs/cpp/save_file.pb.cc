// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: save_file.proto

#include "save_file.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace CARTA {
class SaveFileDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SaveFile>
      _instance;
} _SaveFile_default_instance_;
class SaveFileAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SaveFileAck>
      _instance;
} _SaveFileAck_default_instance_;
}  // namespace CARTA
namespace protobuf_save_5ffile_2eproto {
static void InitDefaultsSaveFile() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CARTA::_SaveFile_default_instance_;
    new (ptr) ::CARTA::SaveFile();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CARTA::SaveFile::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SaveFile =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSaveFile}, {}};

static void InitDefaultsSaveFileAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CARTA::_SaveFileAck_default_instance_;
    new (ptr) ::CARTA::SaveFileAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CARTA::SaveFileAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SaveFileAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSaveFileAck}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_SaveFile.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SaveFileAck.base);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::SaveFile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::SaveFile, file_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::SaveFile, output_file_directory_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::SaveFile, output_file_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::SaveFile, output_file_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::SaveFile, region_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::SaveFile, channels_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::SaveFile, stokes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::SaveFile, keep_degenerate_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::SaveFileAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::SaveFileAck, file_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::SaveFileAck, success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::SaveFileAck, message_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::CARTA::SaveFile)},
  { 13, -1, sizeof(::CARTA::SaveFileAck)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::CARTA::_SaveFile_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::CARTA::_SaveFileAck_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "save_file.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017save_file.proto\022\005CARTA\032\013enums.proto\"\315\001"
      "\n\010SaveFile\022\017\n\007file_id\030\001 \001(\017\022\035\n\025output_fi"
      "le_directory\030\002 \001(\t\022\030\n\020output_file_name\030\003"
      " \001(\t\022)\n\020output_file_type\030\004 \001(\0162\017.CARTA.F"
      "ileType\022\021\n\tregion_id\030\005 \001(\017\022\020\n\010channels\030\006"
      " \003(\017\022\016\n\006stokes\030\007 \003(\017\022\027\n\017keep_degenerate\030"
      "\010 \001(\010\"@\n\013SaveFileAck\022\017\n\007file_id\030\001 \001(\017\022\017\n"
      "\007success\030\002 \001(\010\022\017\n\007message\030\003 \001(\tb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 319);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "save_file.proto", &protobuf_RegisterTypes);
  ::protobuf_enums_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_save_5ffile_2eproto
namespace CARTA {

// ===================================================================

void SaveFile::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SaveFile::kFileIdFieldNumber;
const int SaveFile::kOutputFileDirectoryFieldNumber;
const int SaveFile::kOutputFileNameFieldNumber;
const int SaveFile::kOutputFileTypeFieldNumber;
const int SaveFile::kRegionIdFieldNumber;
const int SaveFile::kChannelsFieldNumber;
const int SaveFile::kStokesFieldNumber;
const int SaveFile::kKeepDegenerateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SaveFile::SaveFile()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_save_5ffile_2eproto::scc_info_SaveFile.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CARTA.SaveFile)
}
SaveFile::SaveFile(const SaveFile& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      channels_(from.channels_),
      stokes_(from.stokes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  output_file_directory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.output_file_directory().size() > 0) {
    output_file_directory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.output_file_directory_);
  }
  output_file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.output_file_name().size() > 0) {
    output_file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.output_file_name_);
  }
  ::memcpy(&file_id_, &from.file_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&keep_degenerate_) -
    reinterpret_cast<char*>(&file_id_)) + sizeof(keep_degenerate_));
  // @@protoc_insertion_point(copy_constructor:CARTA.SaveFile)
}

void SaveFile::SharedCtor() {
  output_file_directory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  output_file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&file_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&keep_degenerate_) -
      reinterpret_cast<char*>(&file_id_)) + sizeof(keep_degenerate_));
}

SaveFile::~SaveFile() {
  // @@protoc_insertion_point(destructor:CARTA.SaveFile)
  SharedDtor();
}

void SaveFile::SharedDtor() {
  output_file_directory_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  output_file_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SaveFile::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SaveFile::descriptor() {
  ::protobuf_save_5ffile_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_save_5ffile_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SaveFile& SaveFile::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_save_5ffile_2eproto::scc_info_SaveFile.base);
  return *internal_default_instance();
}


void SaveFile::Clear() {
// @@protoc_insertion_point(message_clear_start:CARTA.SaveFile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  channels_.Clear();
  stokes_.Clear();
  output_file_directory_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  output_file_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&file_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&keep_degenerate_) -
      reinterpret_cast<char*>(&file_id_)) + sizeof(keep_degenerate_));
  _internal_metadata_.Clear();
}

bool SaveFile::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CARTA.SaveFile)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // sfixed32 file_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, &file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string output_file_directory = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_output_file_directory()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->output_file_directory().data(), static_cast<int>(this->output_file_directory().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CARTA.SaveFile.output_file_directory"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string output_file_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_output_file_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->output_file_name().data(), static_cast<int>(this->output_file_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CARTA.SaveFile.output_file_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .CARTA.FileType output_file_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_output_file_type(static_cast< ::CARTA::FileType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sfixed32 region_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, &region_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sfixed32 channels = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, this->mutable_channels())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 1, 50u, input, this->mutable_channels())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sfixed32 stokes = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, this->mutable_stokes())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 1, 58u, input, this->mutable_stokes())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool keep_degenerate = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &keep_degenerate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CARTA.SaveFile)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CARTA.SaveFile)
  return false;
#undef DO_
}

void SaveFile::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CARTA.SaveFile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sfixed32 file_id = 1;
  if (this->file_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32(1, this->file_id(), output);
  }

  // string output_file_directory = 2;
  if (this->output_file_directory().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->output_file_directory().data(), static_cast<int>(this->output_file_directory().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CARTA.SaveFile.output_file_directory");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->output_file_directory(), output);
  }

  // string output_file_name = 3;
  if (this->output_file_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->output_file_name().data(), static_cast<int>(this->output_file_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CARTA.SaveFile.output_file_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->output_file_name(), output);
  }

  // .CARTA.FileType output_file_type = 4;
  if (this->output_file_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->output_file_type(), output);
  }

  // sfixed32 region_id = 5;
  if (this->region_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32(5, this->region_id(), output);
  }

  // repeated sfixed32 channels = 6;
  if (this->channels_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _channels_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32Array(
      this->channels().data(), this->channels_size(), output);
  }

  // repeated sfixed32 stokes = 7;
  if (this->stokes_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(7, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _stokes_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32Array(
      this->stokes().data(), this->stokes_size(), output);
  }

  // bool keep_degenerate = 8;
  if (this->keep_degenerate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->keep_degenerate(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CARTA.SaveFile)
}

::google::protobuf::uint8* SaveFile::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CARTA.SaveFile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sfixed32 file_id = 1;
  if (this->file_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed32ToArray(1, this->file_id(), target);
  }

  // string output_file_directory = 2;
  if (this->output_file_directory().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->output_file_directory().data(), static_cast<int>(this->output_file_directory().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CARTA.SaveFile.output_file_directory");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->output_file_directory(), target);
  }

  // string output_file_name = 3;
  if (this->output_file_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->output_file_name().data(), static_cast<int>(this->output_file_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CARTA.SaveFile.output_file_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->output_file_name(), target);
  }

  // .CARTA.FileType output_file_type = 4;
  if (this->output_file_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->output_file_type(), target);
  }

  // sfixed32 region_id = 5;
  if (this->region_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed32ToArray(5, this->region_id(), target);
  }

  // repeated sfixed32 channels = 6;
  if (this->channels_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _channels_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed32NoTagToArray(this->channels_, target);
  }

  // repeated sfixed32 stokes = 7;
  if (this->stokes_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      7,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _stokes_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed32NoTagToArray(this->stokes_, target);
  }

  // bool keep_degenerate = 8;
  if (this->keep_degenerate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->keep_degenerate(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CARTA.SaveFile)
  return target;
}

size_t SaveFile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CARTA.SaveFile)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated sfixed32 channels = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->channels_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _channels_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sfixed32 stokes = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->stokes_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _stokes_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string output_file_directory = 2;
  if (this->output_file_directory().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->output_file_directory());
  }

  // string output_file_name = 3;
  if (this->output_file_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->output_file_name());
  }

  // sfixed32 file_id = 1;
  if (this->file_id() != 0) {
    total_size += 1 + 4;
  }

  // .CARTA.FileType output_file_type = 4;
  if (this->output_file_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->output_file_type());
  }

  // sfixed32 region_id = 5;
  if (this->region_id() != 0) {
    total_size += 1 + 4;
  }

  // bool keep_degenerate = 8;
  if (this->keep_degenerate() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SaveFile::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CARTA.SaveFile)
  GOOGLE_DCHECK_NE(&from, this);
  const SaveFile* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SaveFile>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CARTA.SaveFile)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CARTA.SaveFile)
    MergeFrom(*source);
  }
}

void SaveFile::MergeFrom(const SaveFile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CARTA.SaveFile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  channels_.MergeFrom(from.channels_);
  stokes_.MergeFrom(from.stokes_);
  if (from.output_file_directory().size() > 0) {

    output_file_directory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.output_file_directory_);
  }
  if (from.output_file_name().size() > 0) {

    output_file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.output_file_name_);
  }
  if (from.file_id() != 0) {
    set_file_id(from.file_id());
  }
  if (from.output_file_type() != 0) {
    set_output_file_type(from.output_file_type());
  }
  if (from.region_id() != 0) {
    set_region_id(from.region_id());
  }
  if (from.keep_degenerate() != 0) {
    set_keep_degenerate(from.keep_degenerate());
  }
}

void SaveFile::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CARTA.SaveFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SaveFile::CopyFrom(const SaveFile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CARTA.SaveFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SaveFile::IsInitialized() const {
  return true;
}

void SaveFile::Swap(SaveFile* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SaveFile::InternalSwap(SaveFile* other) {
  using std::swap;
  channels_.InternalSwap(&other->channels_);
  stokes_.InternalSwap(&other->stokes_);
  output_file_directory_.Swap(&other->output_file_directory_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  output_file_name_.Swap(&other->output_file_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(file_id_, other->file_id_);
  swap(output_file_type_, other->output_file_type_);
  swap(region_id_, other->region_id_);
  swap(keep_degenerate_, other->keep_degenerate_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SaveFile::GetMetadata() const {
  protobuf_save_5ffile_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_save_5ffile_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SaveFileAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SaveFileAck::kFileIdFieldNumber;
const int SaveFileAck::kSuccessFieldNumber;
const int SaveFileAck::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SaveFileAck::SaveFileAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_save_5ffile_2eproto::scc_info_SaveFileAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CARTA.SaveFileAck)
}
SaveFileAck::SaveFileAck(const SaveFileAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  ::memcpy(&file_id_, &from.file_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&success_) -
    reinterpret_cast<char*>(&file_id_)) + sizeof(success_));
  // @@protoc_insertion_point(copy_constructor:CARTA.SaveFileAck)
}

void SaveFileAck::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&file_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&success_) -
      reinterpret_cast<char*>(&file_id_)) + sizeof(success_));
}

SaveFileAck::~SaveFileAck() {
  // @@protoc_insertion_point(destructor:CARTA.SaveFileAck)
  SharedDtor();
}

void SaveFileAck::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SaveFileAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SaveFileAck::descriptor() {
  ::protobuf_save_5ffile_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_save_5ffile_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SaveFileAck& SaveFileAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_save_5ffile_2eproto::scc_info_SaveFileAck.base);
  return *internal_default_instance();
}


void SaveFileAck::Clear() {
// @@protoc_insertion_point(message_clear_start:CARTA.SaveFileAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&file_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&success_) -
      reinterpret_cast<char*>(&file_id_)) + sizeof(success_));
  _internal_metadata_.Clear();
}

bool SaveFileAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CARTA.SaveFileAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // sfixed32 file_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, &file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool success = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CARTA.SaveFileAck.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CARTA.SaveFileAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CARTA.SaveFileAck)
  return false;
#undef DO_
}

void SaveFileAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CARTA.SaveFileAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sfixed32 file_id = 1;
  if (this->file_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32(1, this->file_id(), output);
  }

  // bool success = 2;
  if (this->success() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->success(), output);
  }

  // string message = 3;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CARTA.SaveFileAck.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CARTA.SaveFileAck)
}

::google::protobuf::uint8* SaveFileAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CARTA.SaveFileAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sfixed32 file_id = 1;
  if (this->file_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed32ToArray(1, this->file_id(), target);
  }

  // bool success = 2;
  if (this->success() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->success(), target);
  }

  // string message = 3;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CARTA.SaveFileAck.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CARTA.SaveFileAck)
  return target;
}

size_t SaveFileAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CARTA.SaveFileAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string message = 3;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // sfixed32 file_id = 1;
  if (this->file_id() != 0) {
    total_size += 1 + 4;
  }

  // bool success = 2;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SaveFileAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CARTA.SaveFileAck)
  GOOGLE_DCHECK_NE(&from, this);
  const SaveFileAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SaveFileAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CARTA.SaveFileAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CARTA.SaveFileAck)
    MergeFrom(*source);
  }
}

void SaveFileAck::MergeFrom(const SaveFileAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CARTA.SaveFileAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.file_id() != 0) {
    set_file_id(from.file_id());
  }
  if (from.success() != 0) {
    set_success(from.success());
  }
}

void SaveFileAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CARTA.SaveFileAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SaveFileAck::CopyFrom(const SaveFileAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CARTA.SaveFileAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SaveFileAck::IsInitialized() const {
  return true;
}

void SaveFileAck::Swap(SaveFileAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SaveFileAck::InternalSwap(SaveFileAck* other) {
  using std::swap;
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(file_id_, other->file_id_);
  swap(success_, other->success_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SaveFileAck::GetMetadata() const {
  protobuf_save_5ffile_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_save_5ffile_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace CARTA
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CARTA::SaveFile* Arena::CreateMaybeMessage< ::CARTA::SaveFile >(Arena* arena) {
  return Arena::CreateInternal< ::CARTA::SaveFile >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CARTA::SaveFileAck* Arena::CreateMaybeMessage< ::CARTA::SaveFileAck >(Arena* arena) {
  return Arena::CreateInternal< ::CARTA::SaveFileAck >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
