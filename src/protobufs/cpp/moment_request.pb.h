// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: moment_request.proto

#ifndef PROTOBUF_INCLUDED_moment_5frequest_2eproto
#define PROTOBUF_INCLUDED_moment_5frequest_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "defs.pb.h"
#include "enums.pb.h"
#include "open_file.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_moment_5frequest_2eproto 

namespace protobuf_moment_5frequest_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_moment_5frequest_2eproto
namespace CARTA {
class MomentProgress;
class MomentProgressDefaultTypeInternal;
extern MomentProgressDefaultTypeInternal _MomentProgress_default_instance_;
class MomentRequest;
class MomentRequestDefaultTypeInternal;
extern MomentRequestDefaultTypeInternal _MomentRequest_default_instance_;
class MomentResponse;
class MomentResponseDefaultTypeInternal;
extern MomentResponseDefaultTypeInternal _MomentResponse_default_instance_;
}  // namespace CARTA
namespace google {
namespace protobuf {
template<> ::CARTA::MomentProgress* Arena::CreateMaybeMessage<::CARTA::MomentProgress>(Arena*);
template<> ::CARTA::MomentRequest* Arena::CreateMaybeMessage<::CARTA::MomentRequest>(Arena*);
template<> ::CARTA::MomentResponse* Arena::CreateMaybeMessage<::CARTA::MomentResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace CARTA {

// ===================================================================

class MomentRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CARTA.MomentRequest) */ {
 public:
  MomentRequest();
  virtual ~MomentRequest();

  MomentRequest(const MomentRequest& from);

  inline MomentRequest& operator=(const MomentRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MomentRequest(MomentRequest&& from) noexcept
    : MomentRequest() {
    *this = ::std::move(from);
  }

  inline MomentRequest& operator=(MomentRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MomentRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MomentRequest* internal_default_instance() {
    return reinterpret_cast<const MomentRequest*>(
               &_MomentRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(MomentRequest* other);
  friend void swap(MomentRequest& a, MomentRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MomentRequest* New() const final {
    return CreateMaybeMessage<MomentRequest>(NULL);
  }

  MomentRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MomentRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MomentRequest& from);
  void MergeFrom(const MomentRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MomentRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CARTA.Moment moments = 2;
  int moments_size() const;
  void clear_moments();
  static const int kMomentsFieldNumber = 2;
  ::CARTA::Moment moments(int index) const;
  void set_moments(int index, ::CARTA::Moment value);
  void add_moments(::CARTA::Moment value);
  const ::google::protobuf::RepeatedField<int>& moments() const;
  ::google::protobuf::RepeatedField<int>* mutable_moments();

  // .CARTA.IntBounds spectral_range = 5;
  bool has_spectral_range() const;
  void clear_spectral_range();
  static const int kSpectralRangeFieldNumber = 5;
  private:
  const ::CARTA::IntBounds& _internal_spectral_range() const;
  public:
  const ::CARTA::IntBounds& spectral_range() const;
  ::CARTA::IntBounds* release_spectral_range();
  ::CARTA::IntBounds* mutable_spectral_range();
  void set_allocated_spectral_range(::CARTA::IntBounds* spectral_range);

  // .CARTA.FloatBounds pixel_range = 7;
  bool has_pixel_range() const;
  void clear_pixel_range();
  static const int kPixelRangeFieldNumber = 7;
  private:
  const ::CARTA::FloatBounds& _internal_pixel_range() const;
  public:
  const ::CARTA::FloatBounds& pixel_range() const;
  ::CARTA::FloatBounds* release_pixel_range();
  ::CARTA::FloatBounds* mutable_pixel_range();
  void set_allocated_pixel_range(::CARTA::FloatBounds* pixel_range);

  // sfixed32 file_id = 1;
  void clear_file_id();
  static const int kFileIdFieldNumber = 1;
  ::google::protobuf::int32 file_id() const;
  void set_file_id(::google::protobuf::int32 value);

  // .CARTA.MomentAxis axis = 3;
  void clear_axis();
  static const int kAxisFieldNumber = 3;
  ::CARTA::MomentAxis axis() const;
  void set_axis(::CARTA::MomentAxis value);

  // sfixed32 region_id = 4;
  void clear_region_id();
  static const int kRegionIdFieldNumber = 4;
  ::google::protobuf::int32 region_id() const;
  void set_region_id(::google::protobuf::int32 value);

  // .CARTA.MomentMask mask = 6;
  void clear_mask();
  static const int kMaskFieldNumber = 6;
  ::CARTA::MomentMask mask() const;
  void set_mask(::CARTA::MomentMask value);

  // @@protoc_insertion_point(class_scope:CARTA.MomentRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField<int> moments_;
  mutable int _moments_cached_byte_size_;
  ::CARTA::IntBounds* spectral_range_;
  ::CARTA::FloatBounds* pixel_range_;
  ::google::protobuf::int32 file_id_;
  int axis_;
  ::google::protobuf::int32 region_id_;
  int mask_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_moment_5frequest_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MomentResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CARTA.MomentResponse) */ {
 public:
  MomentResponse();
  virtual ~MomentResponse();

  MomentResponse(const MomentResponse& from);

  inline MomentResponse& operator=(const MomentResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MomentResponse(MomentResponse&& from) noexcept
    : MomentResponse() {
    *this = ::std::move(from);
  }

  inline MomentResponse& operator=(MomentResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MomentResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MomentResponse* internal_default_instance() {
    return reinterpret_cast<const MomentResponse*>(
               &_MomentResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(MomentResponse* other);
  friend void swap(MomentResponse& a, MomentResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MomentResponse* New() const final {
    return CreateMaybeMessage<MomentResponse>(NULL);
  }

  MomentResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MomentResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MomentResponse& from);
  void MergeFrom(const MomentResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MomentResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CARTA.OpenFileAck open_file_acks = 3;
  int open_file_acks_size() const;
  void clear_open_file_acks();
  static const int kOpenFileAcksFieldNumber = 3;
  ::CARTA::OpenFileAck* mutable_open_file_acks(int index);
  ::google::protobuf::RepeatedPtrField< ::CARTA::OpenFileAck >*
      mutable_open_file_acks();
  const ::CARTA::OpenFileAck& open_file_acks(int index) const;
  ::CARTA::OpenFileAck* add_open_file_acks();
  const ::google::protobuf::RepeatedPtrField< ::CARTA::OpenFileAck >&
      open_file_acks() const;

  // string message = 2;
  void clear_message();
  static const int kMessageFieldNumber = 2;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // bool success = 1;
  void clear_success();
  static const int kSuccessFieldNumber = 1;
  bool success() const;
  void set_success(bool value);

  // bool cancel = 4;
  void clear_cancel();
  static const int kCancelFieldNumber = 4;
  bool cancel() const;
  void set_cancel(bool value);

  // @@protoc_insertion_point(class_scope:CARTA.MomentResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::CARTA::OpenFileAck > open_file_acks_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  bool success_;
  bool cancel_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_moment_5frequest_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MomentProgress : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CARTA.MomentProgress) */ {
 public:
  MomentProgress();
  virtual ~MomentProgress();

  MomentProgress(const MomentProgress& from);

  inline MomentProgress& operator=(const MomentProgress& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MomentProgress(MomentProgress&& from) noexcept
    : MomentProgress() {
    *this = ::std::move(from);
  }

  inline MomentProgress& operator=(MomentProgress&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MomentProgress& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MomentProgress* internal_default_instance() {
    return reinterpret_cast<const MomentProgress*>(
               &_MomentProgress_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(MomentProgress* other);
  friend void swap(MomentProgress& a, MomentProgress& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MomentProgress* New() const final {
    return CreateMaybeMessage<MomentProgress>(NULL);
  }

  MomentProgress* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MomentProgress>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MomentProgress& from);
  void MergeFrom(const MomentProgress& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MomentProgress* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // sfixed32 file_id = 1;
  void clear_file_id();
  static const int kFileIdFieldNumber = 1;
  ::google::protobuf::int32 file_id() const;
  void set_file_id(::google::protobuf::int32 value);

  // float progress = 2;
  void clear_progress();
  static const int kProgressFieldNumber = 2;
  float progress() const;
  void set_progress(float value);

  // @@protoc_insertion_point(class_scope:CARTA.MomentProgress)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 file_id_;
  float progress_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_moment_5frequest_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MomentRequest

// sfixed32 file_id = 1;
inline void MomentRequest::clear_file_id() {
  file_id_ = 0;
}
inline ::google::protobuf::int32 MomentRequest::file_id() const {
  // @@protoc_insertion_point(field_get:CARTA.MomentRequest.file_id)
  return file_id_;
}
inline void MomentRequest::set_file_id(::google::protobuf::int32 value) {
  
  file_id_ = value;
  // @@protoc_insertion_point(field_set:CARTA.MomentRequest.file_id)
}

// repeated .CARTA.Moment moments = 2;
inline int MomentRequest::moments_size() const {
  return moments_.size();
}
inline void MomentRequest::clear_moments() {
  moments_.Clear();
}
inline ::CARTA::Moment MomentRequest::moments(int index) const {
  // @@protoc_insertion_point(field_get:CARTA.MomentRequest.moments)
  return static_cast< ::CARTA::Moment >(moments_.Get(index));
}
inline void MomentRequest::set_moments(int index, ::CARTA::Moment value) {
  moments_.Set(index, value);
  // @@protoc_insertion_point(field_set:CARTA.MomentRequest.moments)
}
inline void MomentRequest::add_moments(::CARTA::Moment value) {
  moments_.Add(value);
  // @@protoc_insertion_point(field_add:CARTA.MomentRequest.moments)
}
inline const ::google::protobuf::RepeatedField<int>&
MomentRequest::moments() const {
  // @@protoc_insertion_point(field_list:CARTA.MomentRequest.moments)
  return moments_;
}
inline ::google::protobuf::RepeatedField<int>*
MomentRequest::mutable_moments() {
  // @@protoc_insertion_point(field_mutable_list:CARTA.MomentRequest.moments)
  return &moments_;
}

// .CARTA.MomentAxis axis = 3;
inline void MomentRequest::clear_axis() {
  axis_ = 0;
}
inline ::CARTA::MomentAxis MomentRequest::axis() const {
  // @@protoc_insertion_point(field_get:CARTA.MomentRequest.axis)
  return static_cast< ::CARTA::MomentAxis >(axis_);
}
inline void MomentRequest::set_axis(::CARTA::MomentAxis value) {
  
  axis_ = value;
  // @@protoc_insertion_point(field_set:CARTA.MomentRequest.axis)
}

// sfixed32 region_id = 4;
inline void MomentRequest::clear_region_id() {
  region_id_ = 0;
}
inline ::google::protobuf::int32 MomentRequest::region_id() const {
  // @@protoc_insertion_point(field_get:CARTA.MomentRequest.region_id)
  return region_id_;
}
inline void MomentRequest::set_region_id(::google::protobuf::int32 value) {
  
  region_id_ = value;
  // @@protoc_insertion_point(field_set:CARTA.MomentRequest.region_id)
}

// .CARTA.IntBounds spectral_range = 5;
inline bool MomentRequest::has_spectral_range() const {
  return this != internal_default_instance() && spectral_range_ != NULL;
}
inline const ::CARTA::IntBounds& MomentRequest::_internal_spectral_range() const {
  return *spectral_range_;
}
inline const ::CARTA::IntBounds& MomentRequest::spectral_range() const {
  const ::CARTA::IntBounds* p = spectral_range_;
  // @@protoc_insertion_point(field_get:CARTA.MomentRequest.spectral_range)
  return p != NULL ? *p : *reinterpret_cast<const ::CARTA::IntBounds*>(
      &::CARTA::_IntBounds_default_instance_);
}
inline ::CARTA::IntBounds* MomentRequest::release_spectral_range() {
  // @@protoc_insertion_point(field_release:CARTA.MomentRequest.spectral_range)
  
  ::CARTA::IntBounds* temp = spectral_range_;
  spectral_range_ = NULL;
  return temp;
}
inline ::CARTA::IntBounds* MomentRequest::mutable_spectral_range() {
  
  if (spectral_range_ == NULL) {
    auto* p = CreateMaybeMessage<::CARTA::IntBounds>(GetArenaNoVirtual());
    spectral_range_ = p;
  }
  // @@protoc_insertion_point(field_mutable:CARTA.MomentRequest.spectral_range)
  return spectral_range_;
}
inline void MomentRequest::set_allocated_spectral_range(::CARTA::IntBounds* spectral_range) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(spectral_range_);
  }
  if (spectral_range) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      spectral_range = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, spectral_range, submessage_arena);
    }
    
  } else {
    
  }
  spectral_range_ = spectral_range;
  // @@protoc_insertion_point(field_set_allocated:CARTA.MomentRequest.spectral_range)
}

// .CARTA.MomentMask mask = 6;
inline void MomentRequest::clear_mask() {
  mask_ = 0;
}
inline ::CARTA::MomentMask MomentRequest::mask() const {
  // @@protoc_insertion_point(field_get:CARTA.MomentRequest.mask)
  return static_cast< ::CARTA::MomentMask >(mask_);
}
inline void MomentRequest::set_mask(::CARTA::MomentMask value) {
  
  mask_ = value;
  // @@protoc_insertion_point(field_set:CARTA.MomentRequest.mask)
}

// .CARTA.FloatBounds pixel_range = 7;
inline bool MomentRequest::has_pixel_range() const {
  return this != internal_default_instance() && pixel_range_ != NULL;
}
inline const ::CARTA::FloatBounds& MomentRequest::_internal_pixel_range() const {
  return *pixel_range_;
}
inline const ::CARTA::FloatBounds& MomentRequest::pixel_range() const {
  const ::CARTA::FloatBounds* p = pixel_range_;
  // @@protoc_insertion_point(field_get:CARTA.MomentRequest.pixel_range)
  return p != NULL ? *p : *reinterpret_cast<const ::CARTA::FloatBounds*>(
      &::CARTA::_FloatBounds_default_instance_);
}
inline ::CARTA::FloatBounds* MomentRequest::release_pixel_range() {
  // @@protoc_insertion_point(field_release:CARTA.MomentRequest.pixel_range)
  
  ::CARTA::FloatBounds* temp = pixel_range_;
  pixel_range_ = NULL;
  return temp;
}
inline ::CARTA::FloatBounds* MomentRequest::mutable_pixel_range() {
  
  if (pixel_range_ == NULL) {
    auto* p = CreateMaybeMessage<::CARTA::FloatBounds>(GetArenaNoVirtual());
    pixel_range_ = p;
  }
  // @@protoc_insertion_point(field_mutable:CARTA.MomentRequest.pixel_range)
  return pixel_range_;
}
inline void MomentRequest::set_allocated_pixel_range(::CARTA::FloatBounds* pixel_range) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(pixel_range_);
  }
  if (pixel_range) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pixel_range = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pixel_range, submessage_arena);
    }
    
  } else {
    
  }
  pixel_range_ = pixel_range;
  // @@protoc_insertion_point(field_set_allocated:CARTA.MomentRequest.pixel_range)
}

// -------------------------------------------------------------------

// MomentResponse

// bool success = 1;
inline void MomentResponse::clear_success() {
  success_ = false;
}
inline bool MomentResponse::success() const {
  // @@protoc_insertion_point(field_get:CARTA.MomentResponse.success)
  return success_;
}
inline void MomentResponse::set_success(bool value) {
  
  success_ = value;
  // @@protoc_insertion_point(field_set:CARTA.MomentResponse.success)
}

// string message = 2;
inline void MomentResponse::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MomentResponse::message() const {
  // @@protoc_insertion_point(field_get:CARTA.MomentResponse.message)
  return message_.GetNoArena();
}
inline void MomentResponse::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CARTA.MomentResponse.message)
}
#if LANG_CXX11
inline void MomentResponse::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CARTA.MomentResponse.message)
}
#endif
inline void MomentResponse::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CARTA.MomentResponse.message)
}
inline void MomentResponse::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CARTA.MomentResponse.message)
}
inline ::std::string* MomentResponse::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:CARTA.MomentResponse.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MomentResponse::release_message() {
  // @@protoc_insertion_point(field_release:CARTA.MomentResponse.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MomentResponse::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:CARTA.MomentResponse.message)
}

// repeated .CARTA.OpenFileAck open_file_acks = 3;
inline int MomentResponse::open_file_acks_size() const {
  return open_file_acks_.size();
}
inline ::CARTA::OpenFileAck* MomentResponse::mutable_open_file_acks(int index) {
  // @@protoc_insertion_point(field_mutable:CARTA.MomentResponse.open_file_acks)
  return open_file_acks_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::CARTA::OpenFileAck >*
MomentResponse::mutable_open_file_acks() {
  // @@protoc_insertion_point(field_mutable_list:CARTA.MomentResponse.open_file_acks)
  return &open_file_acks_;
}
inline const ::CARTA::OpenFileAck& MomentResponse::open_file_acks(int index) const {
  // @@protoc_insertion_point(field_get:CARTA.MomentResponse.open_file_acks)
  return open_file_acks_.Get(index);
}
inline ::CARTA::OpenFileAck* MomentResponse::add_open_file_acks() {
  // @@protoc_insertion_point(field_add:CARTA.MomentResponse.open_file_acks)
  return open_file_acks_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CARTA::OpenFileAck >&
MomentResponse::open_file_acks() const {
  // @@protoc_insertion_point(field_list:CARTA.MomentResponse.open_file_acks)
  return open_file_acks_;
}

// bool cancel = 4;
inline void MomentResponse::clear_cancel() {
  cancel_ = false;
}
inline bool MomentResponse::cancel() const {
  // @@protoc_insertion_point(field_get:CARTA.MomentResponse.cancel)
  return cancel_;
}
inline void MomentResponse::set_cancel(bool value) {
  
  cancel_ = value;
  // @@protoc_insertion_point(field_set:CARTA.MomentResponse.cancel)
}

// -------------------------------------------------------------------

// MomentProgress

// sfixed32 file_id = 1;
inline void MomentProgress::clear_file_id() {
  file_id_ = 0;
}
inline ::google::protobuf::int32 MomentProgress::file_id() const {
  // @@protoc_insertion_point(field_get:CARTA.MomentProgress.file_id)
  return file_id_;
}
inline void MomentProgress::set_file_id(::google::protobuf::int32 value) {
  
  file_id_ = value;
  // @@protoc_insertion_point(field_set:CARTA.MomentProgress.file_id)
}

// float progress = 2;
inline void MomentProgress::clear_progress() {
  progress_ = 0;
}
inline float MomentProgress::progress() const {
  // @@protoc_insertion_point(field_get:CARTA.MomentProgress.progress)
  return progress_;
}
inline void MomentProgress::set_progress(float value) {
  
  progress_ = value;
  // @@protoc_insertion_point(field_set:CARTA.MomentProgress.progress)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace CARTA

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_moment_5frequest_2eproto
