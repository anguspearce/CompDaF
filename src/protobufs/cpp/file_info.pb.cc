// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: file_info.proto

#include "file_info.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_defs_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_defs_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FileInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_defs_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_FileInfoExtended;
}  // namespace protobuf_defs_2eproto
namespace protobuf_file_5finfo_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_file_5finfo_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_FileInfoResponse_FileInfoExtendedEntry_DoNotUse;
}  // namespace protobuf_file_5finfo_2eproto
namespace CARTA {
class FileInfoRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FileInfoRequest>
      _instance;
} _FileInfoRequest_default_instance_;
class FileInfoResponse_FileInfoExtendedEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FileInfoResponse_FileInfoExtendedEntry_DoNotUse>
      _instance;
} _FileInfoResponse_FileInfoExtendedEntry_DoNotUse_default_instance_;
class FileInfoResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FileInfoResponse>
      _instance;
} _FileInfoResponse_default_instance_;
}  // namespace CARTA
namespace protobuf_file_5finfo_2eproto {
static void InitDefaultsFileInfoRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CARTA::_FileInfoRequest_default_instance_;
    new (ptr) ::CARTA::FileInfoRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CARTA::FileInfoRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FileInfoRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFileInfoRequest}, {}};

static void InitDefaultsFileInfoResponse_FileInfoExtendedEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CARTA::_FileInfoResponse_FileInfoExtendedEntry_DoNotUse_default_instance_;
    new (ptr) ::CARTA::FileInfoResponse_FileInfoExtendedEntry_DoNotUse();
  }
  ::CARTA::FileInfoResponse_FileInfoExtendedEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_FileInfoResponse_FileInfoExtendedEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsFileInfoResponse_FileInfoExtendedEntry_DoNotUse}, {
      &protobuf_defs_2eproto::scc_info_FileInfoExtended.base,}};

static void InitDefaultsFileInfoResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CARTA::_FileInfoResponse_default_instance_;
    new (ptr) ::CARTA::FileInfoResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CARTA::FileInfoResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_FileInfoResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsFileInfoResponse}, {
      &protobuf_defs_2eproto::scc_info_FileInfo.base,
      &protobuf_file_5finfo_2eproto::scc_info_FileInfoResponse_FileInfoExtendedEntry_DoNotUse.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_FileInfoRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FileInfoResponse_FileInfoExtendedEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FileInfoResponse.base);
}

::google::protobuf::Metadata file_level_metadata[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::FileInfoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::FileInfoRequest, directory_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::FileInfoRequest, file_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::FileInfoRequest, hdu_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::FileInfoResponse_FileInfoExtendedEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::FileInfoResponse_FileInfoExtendedEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::FileInfoResponse_FileInfoExtendedEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::FileInfoResponse_FileInfoExtendedEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::FileInfoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::FileInfoResponse, success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::FileInfoResponse, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::FileInfoResponse, file_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::FileInfoResponse, file_info_extended_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::CARTA::FileInfoRequest)},
  { 8, 15, sizeof(::CARTA::FileInfoResponse_FileInfoExtendedEntry_DoNotUse)},
  { 17, -1, sizeof(::CARTA::FileInfoResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::CARTA::_FileInfoRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::CARTA::_FileInfoResponse_FileInfoExtendedEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::CARTA::_FileInfoResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "file_info.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017file_info.proto\022\005CARTA\032\ndefs.proto\"\?\n\017"
      "FileInfoRequest\022\021\n\tdirectory\030\001 \001(\t\022\014\n\004fi"
      "le\030\002 \001(\t\022\013\n\003hdu\030\003 \001(\t\"\365\001\n\020FileInfoRespon"
      "se\022\017\n\007success\030\001 \001(\010\022\017\n\007message\030\002 \001(\t\022\"\n\t"
      "file_info\030\003 \001(\0132\017.CARTA.FileInfo\022I\n\022file"
      "_info_extended\030\004 \003(\0132-.CARTA.FileInfoRes"
      "ponse.FileInfoExtendedEntry\032P\n\025FileInfoE"
      "xtendedEntry\022\013\n\003key\030\001 \001(\t\022&\n\005value\030\002 \001(\013"
      "2\027.CARTA.FileInfoExtended:\0028\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 357);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "file_info.proto", &protobuf_RegisterTypes);
  ::protobuf_defs_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_file_5finfo_2eproto
namespace CARTA {

// ===================================================================

void FileInfoRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FileInfoRequest::kDirectoryFieldNumber;
const int FileInfoRequest::kFileFieldNumber;
const int FileInfoRequest::kHduFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FileInfoRequest::FileInfoRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_file_5finfo_2eproto::scc_info_FileInfoRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CARTA.FileInfoRequest)
}
FileInfoRequest::FileInfoRequest(const FileInfoRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  directory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.directory().size() > 0) {
    directory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.directory_);
  }
  file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.file().size() > 0) {
    file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_);
  }
  hdu_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.hdu().size() > 0) {
    hdu_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hdu_);
  }
  // @@protoc_insertion_point(copy_constructor:CARTA.FileInfoRequest)
}

void FileInfoRequest::SharedCtor() {
  directory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hdu_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

FileInfoRequest::~FileInfoRequest() {
  // @@protoc_insertion_point(destructor:CARTA.FileInfoRequest)
  SharedDtor();
}

void FileInfoRequest::SharedDtor() {
  directory_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hdu_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FileInfoRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FileInfoRequest::descriptor() {
  ::protobuf_file_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_file_5finfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FileInfoRequest& FileInfoRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_file_5finfo_2eproto::scc_info_FileInfoRequest.base);
  return *internal_default_instance();
}


void FileInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CARTA.FileInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  directory_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hdu_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool FileInfoRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CARTA.FileInfoRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string directory = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_directory()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->directory().data(), static_cast<int>(this->directory().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CARTA.FileInfoRequest.directory"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string file = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->file().data(), static_cast<int>(this->file().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CARTA.FileInfoRequest.file"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string hdu = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hdu()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->hdu().data(), static_cast<int>(this->hdu().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CARTA.FileInfoRequest.hdu"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CARTA.FileInfoRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CARTA.FileInfoRequest)
  return false;
#undef DO_
}

void FileInfoRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CARTA.FileInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string directory = 1;
  if (this->directory().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->directory().data(), static_cast<int>(this->directory().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CARTA.FileInfoRequest.directory");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->directory(), output);
  }

  // string file = 2;
  if (this->file().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file().data(), static_cast<int>(this->file().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CARTA.FileInfoRequest.file");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->file(), output);
  }

  // string hdu = 3;
  if (this->hdu().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hdu().data(), static_cast<int>(this->hdu().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CARTA.FileInfoRequest.hdu");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->hdu(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CARTA.FileInfoRequest)
}

::google::protobuf::uint8* FileInfoRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CARTA.FileInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string directory = 1;
  if (this->directory().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->directory().data(), static_cast<int>(this->directory().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CARTA.FileInfoRequest.directory");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->directory(), target);
  }

  // string file = 2;
  if (this->file().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file().data(), static_cast<int>(this->file().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CARTA.FileInfoRequest.file");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->file(), target);
  }

  // string hdu = 3;
  if (this->hdu().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hdu().data(), static_cast<int>(this->hdu().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CARTA.FileInfoRequest.hdu");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->hdu(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CARTA.FileInfoRequest)
  return target;
}

size_t FileInfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CARTA.FileInfoRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string directory = 1;
  if (this->directory().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->directory());
  }

  // string file = 2;
  if (this->file().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file());
  }

  // string hdu = 3;
  if (this->hdu().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->hdu());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FileInfoRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CARTA.FileInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const FileInfoRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FileInfoRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CARTA.FileInfoRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CARTA.FileInfoRequest)
    MergeFrom(*source);
  }
}

void FileInfoRequest::MergeFrom(const FileInfoRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CARTA.FileInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.directory().size() > 0) {

    directory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.directory_);
  }
  if (from.file().size() > 0) {

    file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_);
  }
  if (from.hdu().size() > 0) {

    hdu_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hdu_);
  }
}

void FileInfoRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CARTA.FileInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileInfoRequest::CopyFrom(const FileInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CARTA.FileInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileInfoRequest::IsInitialized() const {
  return true;
}

void FileInfoRequest::Swap(FileInfoRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FileInfoRequest::InternalSwap(FileInfoRequest* other) {
  using std::swap;
  directory_.Swap(&other->directory_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  file_.Swap(&other->file_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  hdu_.Swap(&other->hdu_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FileInfoRequest::GetMetadata() const {
  protobuf_file_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_file_5finfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

FileInfoResponse_FileInfoExtendedEntry_DoNotUse::FileInfoResponse_FileInfoExtendedEntry_DoNotUse() {}
FileInfoResponse_FileInfoExtendedEntry_DoNotUse::FileInfoResponse_FileInfoExtendedEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void FileInfoResponse_FileInfoExtendedEntry_DoNotUse::MergeFrom(const FileInfoResponse_FileInfoExtendedEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata FileInfoResponse_FileInfoExtendedEntry_DoNotUse::GetMetadata() const {
  ::protobuf_file_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_file_5finfo_2eproto::file_level_metadata[1];
}
void FileInfoResponse_FileInfoExtendedEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void FileInfoResponse::InitAsDefaultInstance() {
  ::CARTA::_FileInfoResponse_default_instance_._instance.get_mutable()->file_info_ = const_cast< ::CARTA::FileInfo*>(
      ::CARTA::FileInfo::internal_default_instance());
}
void FileInfoResponse::clear_file_info() {
  if (GetArenaNoVirtual() == NULL && file_info_ != NULL) {
    delete file_info_;
  }
  file_info_ = NULL;
}
void FileInfoResponse::clear_file_info_extended() {
  file_info_extended_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FileInfoResponse::kSuccessFieldNumber;
const int FileInfoResponse::kMessageFieldNumber;
const int FileInfoResponse::kFileInfoFieldNumber;
const int FileInfoResponse::kFileInfoExtendedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FileInfoResponse::FileInfoResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_file_5finfo_2eproto::scc_info_FileInfoResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CARTA.FileInfoResponse)
}
FileInfoResponse::FileInfoResponse(const FileInfoResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  file_info_extended_.MergeFrom(from.file_info_extended_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.has_file_info()) {
    file_info_ = new ::CARTA::FileInfo(*from.file_info_);
  } else {
    file_info_ = NULL;
  }
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:CARTA.FileInfoResponse)
}

void FileInfoResponse::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&file_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&success_) -
      reinterpret_cast<char*>(&file_info_)) + sizeof(success_));
}

FileInfoResponse::~FileInfoResponse() {
  // @@protoc_insertion_point(destructor:CARTA.FileInfoResponse)
  SharedDtor();
}

void FileInfoResponse::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete file_info_;
}

void FileInfoResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FileInfoResponse::descriptor() {
  ::protobuf_file_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_file_5finfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FileInfoResponse& FileInfoResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_file_5finfo_2eproto::scc_info_FileInfoResponse.base);
  return *internal_default_instance();
}


void FileInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CARTA.FileInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  file_info_extended_.Clear();
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && file_info_ != NULL) {
    delete file_info_;
  }
  file_info_ = NULL;
  success_ = false;
  _internal_metadata_.Clear();
}

bool FileInfoResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CARTA.FileInfoResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool success = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CARTA.FileInfoResponse.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .CARTA.FileInfo file_info = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_file_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, .CARTA.FileInfoExtended> file_info_extended = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          FileInfoResponse_FileInfoExtendedEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              FileInfoResponse_FileInfoExtendedEntry_DoNotUse,
              ::std::string, ::CARTA::FileInfoExtended,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::CARTA::FileInfoExtended > > parser(&file_info_extended_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CARTA.FileInfoResponse.FileInfoExtendedEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CARTA.FileInfoResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CARTA.FileInfoResponse)
  return false;
#undef DO_
}

void FileInfoResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CARTA.FileInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CARTA.FileInfoResponse.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  // .CARTA.FileInfo file_info = 3;
  if (this->has_file_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_file_info(), output);
  }

  // map<string, .CARTA.FileInfoExtended> file_info_extended = 4;
  if (!this->file_info_extended().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::CARTA::FileInfoExtended >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "CARTA.FileInfoResponse.FileInfoExtendedEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->file_info_extended().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->file_info_extended().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::CARTA::FileInfoExtended >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::CARTA::FileInfoExtended >::const_iterator
          it = this->file_info_extended().begin();
          it != this->file_info_extended().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<FileInfoResponse_FileInfoExtendedEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(file_info_extended_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<FileInfoResponse_FileInfoExtendedEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::CARTA::FileInfoExtended >::const_iterator
          it = this->file_info_extended().begin();
          it != this->file_info_extended().end(); ++it) {
        entry.reset(file_info_extended_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CARTA.FileInfoResponse)
}

::google::protobuf::uint8* FileInfoResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CARTA.FileInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CARTA.FileInfoResponse.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  // .CARTA.FileInfo file_info = 3;
  if (this->has_file_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_file_info(), deterministic, target);
  }

  // map<string, .CARTA.FileInfoExtended> file_info_extended = 4;
  if (!this->file_info_extended().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::CARTA::FileInfoExtended >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "CARTA.FileInfoResponse.FileInfoExtendedEntry.key");
      }
    };

    if (deterministic &&
        this->file_info_extended().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->file_info_extended().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::CARTA::FileInfoExtended >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::CARTA::FileInfoExtended >::const_iterator
          it = this->file_info_extended().begin();
          it != this->file_info_extended().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<FileInfoResponse_FileInfoExtendedEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(file_info_extended_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<FileInfoResponse_FileInfoExtendedEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::CARTA::FileInfoExtended >::const_iterator
          it = this->file_info_extended().begin();
          it != this->file_info_extended().end(); ++it) {
        entry.reset(file_info_extended_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CARTA.FileInfoResponse)
  return target;
}

size_t FileInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CARTA.FileInfoResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, .CARTA.FileInfoExtended> file_info_extended = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->file_info_extended_size());
  {
    ::std::unique_ptr<FileInfoResponse_FileInfoExtendedEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::CARTA::FileInfoExtended >::const_iterator
        it = this->file_info_extended().begin();
        it != this->file_info_extended().end(); ++it) {
      entry.reset(file_info_extended_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // .CARTA.FileInfo file_info = 3;
  if (this->has_file_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *file_info_);
  }

  // bool success = 1;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FileInfoResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CARTA.FileInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const FileInfoResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FileInfoResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CARTA.FileInfoResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CARTA.FileInfoResponse)
    MergeFrom(*source);
  }
}

void FileInfoResponse::MergeFrom(const FileInfoResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CARTA.FileInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  file_info_extended_.MergeFrom(from.file_info_extended_);
  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.has_file_info()) {
    mutable_file_info()->::CARTA::FileInfo::MergeFrom(from.file_info());
  }
  if (from.success() != 0) {
    set_success(from.success());
  }
}

void FileInfoResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CARTA.FileInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileInfoResponse::CopyFrom(const FileInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CARTA.FileInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileInfoResponse::IsInitialized() const {
  return true;
}

void FileInfoResponse::Swap(FileInfoResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FileInfoResponse::InternalSwap(FileInfoResponse* other) {
  using std::swap;
  file_info_extended_.Swap(&other->file_info_extended_);
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(file_info_, other->file_info_);
  swap(success_, other->success_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FileInfoResponse::GetMetadata() const {
  protobuf_file_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_file_5finfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace CARTA
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CARTA::FileInfoRequest* Arena::CreateMaybeMessage< ::CARTA::FileInfoRequest >(Arena* arena) {
  return Arena::CreateInternal< ::CARTA::FileInfoRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CARTA::FileInfoResponse_FileInfoExtendedEntry_DoNotUse* Arena::CreateMaybeMessage< ::CARTA::FileInfoResponse_FileInfoExtendedEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::CARTA::FileInfoResponse_FileInfoExtendedEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CARTA::FileInfoResponse* Arena::CreateMaybeMessage< ::CARTA::FileInfoResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CARTA::FileInfoResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
