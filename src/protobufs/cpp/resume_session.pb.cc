// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: resume_session.proto

#include "resume_session.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_concat_5fstokes_5ffiles_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_concat_5fstokes_5ffiles_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_StokesFile;
}  // namespace protobuf_concat_5fstokes_5ffiles_2eproto
namespace protobuf_contour_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_contour_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_SetContourParameters;
}  // namespace protobuf_contour_2eproto
namespace protobuf_defs_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_defs_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_RegionInfo;
}  // namespace protobuf_defs_2eproto
namespace protobuf_open_5fcatalog_5ffile_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_open_5fcatalog_5ffile_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_OpenCatalogFile;
}  // namespace protobuf_open_5fcatalog_5ffile_2eproto
namespace protobuf_resume_5fsession_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_resume_5fsession_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ImageProperties_RegionsEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_resume_5fsession_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_ImageProperties;
}  // namespace protobuf_resume_5fsession_2eproto
namespace CARTA {
class ImageProperties_RegionsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ImageProperties_RegionsEntry_DoNotUse>
      _instance;
} _ImageProperties_RegionsEntry_DoNotUse_default_instance_;
class ImagePropertiesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ImageProperties>
      _instance;
} _ImageProperties_default_instance_;
class ResumeSessionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ResumeSession>
      _instance;
} _ResumeSession_default_instance_;
class ResumeSessionAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ResumeSessionAck>
      _instance;
} _ResumeSessionAck_default_instance_;
}  // namespace CARTA
namespace protobuf_resume_5fsession_2eproto {
static void InitDefaultsImageProperties_RegionsEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CARTA::_ImageProperties_RegionsEntry_DoNotUse_default_instance_;
    new (ptr) ::CARTA::ImageProperties_RegionsEntry_DoNotUse();
  }
  ::CARTA::ImageProperties_RegionsEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ImageProperties_RegionsEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsImageProperties_RegionsEntry_DoNotUse}, {
      &protobuf_defs_2eproto::scc_info_RegionInfo.base,}};

static void InitDefaultsImageProperties() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CARTA::_ImageProperties_default_instance_;
    new (ptr) ::CARTA::ImageProperties();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CARTA::ImageProperties::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_ImageProperties =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsImageProperties}, {
      &protobuf_resume_5fsession_2eproto::scc_info_ImageProperties_RegionsEntry_DoNotUse.base,
      &protobuf_contour_2eproto::scc_info_SetContourParameters.base,
      &protobuf_concat_5fstokes_5ffiles_2eproto::scc_info_StokesFile.base,}};

static void InitDefaultsResumeSession() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CARTA::_ResumeSession_default_instance_;
    new (ptr) ::CARTA::ResumeSession();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CARTA::ResumeSession::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ResumeSession =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsResumeSession}, {
      &protobuf_resume_5fsession_2eproto::scc_info_ImageProperties.base,
      &protobuf_open_5fcatalog_5ffile_2eproto::scc_info_OpenCatalogFile.base,}};

static void InitDefaultsResumeSessionAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CARTA::_ResumeSessionAck_default_instance_;
    new (ptr) ::CARTA::ResumeSessionAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CARTA::ResumeSessionAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ResumeSessionAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsResumeSessionAck}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ImageProperties_RegionsEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ImageProperties.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ResumeSession.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ResumeSessionAck.base);
}

::google::protobuf::Metadata file_level_metadata[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::ImageProperties_RegionsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::ImageProperties_RegionsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::ImageProperties_RegionsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::ImageProperties_RegionsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::ImageProperties, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::ImageProperties, directory_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::ImageProperties, file_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::ImageProperties, hdu_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::ImageProperties, file_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::ImageProperties, render_mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::ImageProperties, channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::ImageProperties, stokes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::ImageProperties, regions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::ImageProperties, contour_settings_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::ImageProperties, stokes_files_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::ResumeSession, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::ResumeSession, images_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::ResumeSession, catalog_files_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::ResumeSessionAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::ResumeSessionAck, success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::ResumeSessionAck, message_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::CARTA::ImageProperties_RegionsEntry_DoNotUse)},
  { 9, -1, sizeof(::CARTA::ImageProperties)},
  { 24, -1, sizeof(::CARTA::ResumeSession)},
  { 31, -1, sizeof(::CARTA::ResumeSessionAck)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::CARTA::_ImageProperties_RegionsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::CARTA::_ImageProperties_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::CARTA::_ResumeSession_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::CARTA::_ResumeSessionAck_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "resume_session.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\024resume_session.proto\022\005CARTA\032\ndefs.prot"
      "o\032\013enums.proto\032\027open_catalog_file.proto\032"
      "\rcontour.proto\032\031concat_stokes_files.prot"
      "o\"\362\002\n\017ImageProperties\022\021\n\tdirectory\030\001 \001(\t"
      "\022\014\n\004file\030\002 \001(\t\022\013\n\003hdu\030\003 \001(\t\022\017\n\007file_id\030\004"
      " \001(\017\022&\n\013render_mode\030\005 \001(\0162\021.CARTA.Render"
      "Mode\022\017\n\007channel\030\006 \001(\017\022\016\n\006stokes\030\007 \001(\017\0224\n"
      "\007regions\030\010 \003(\0132#.CARTA.ImageProperties.R"
      "egionsEntry\0225\n\020contour_settings\030\t \001(\0132\033."
      "CARTA.SetContourParameters\022\'\n\014stokes_fil"
      "es\030\n \003(\0132\021.CARTA.StokesFile\032A\n\014RegionsEn"
      "try\022\013\n\003key\030\001 \001(\017\022 \n\005value\030\002 \001(\0132\021.CARTA."
      "RegionInfo:\0028\001\"f\n\rResumeSession\022&\n\006image"
      "s\030\001 \003(\0132\026.CARTA.ImageProperties\022-\n\rcatal"
      "og_files\030\002 \003(\0132\026.CARTA.OpenCatalogFile\"4"
      "\n\020ResumeSessionAck\022\017\n\007success\030\001 \001(\010\022\017\n\007m"
      "essage\030\002 \001(\tb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 660);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "resume_session.proto", &protobuf_RegisterTypes);
  ::protobuf_defs_2eproto::AddDescriptors();
  ::protobuf_enums_2eproto::AddDescriptors();
  ::protobuf_open_5fcatalog_5ffile_2eproto::AddDescriptors();
  ::protobuf_contour_2eproto::AddDescriptors();
  ::protobuf_concat_5fstokes_5ffiles_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_resume_5fsession_2eproto
namespace CARTA {

// ===================================================================

ImageProperties_RegionsEntry_DoNotUse::ImageProperties_RegionsEntry_DoNotUse() {}
ImageProperties_RegionsEntry_DoNotUse::ImageProperties_RegionsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void ImageProperties_RegionsEntry_DoNotUse::MergeFrom(const ImageProperties_RegionsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata ImageProperties_RegionsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_resume_5fsession_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_resume_5fsession_2eproto::file_level_metadata[0];
}
void ImageProperties_RegionsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void ImageProperties::InitAsDefaultInstance() {
  ::CARTA::_ImageProperties_default_instance_._instance.get_mutable()->contour_settings_ = const_cast< ::CARTA::SetContourParameters*>(
      ::CARTA::SetContourParameters::internal_default_instance());
}
void ImageProperties::clear_regions() {
  regions_.Clear();
}
void ImageProperties::clear_contour_settings() {
  if (GetArenaNoVirtual() == NULL && contour_settings_ != NULL) {
    delete contour_settings_;
  }
  contour_settings_ = NULL;
}
void ImageProperties::clear_stokes_files() {
  stokes_files_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ImageProperties::kDirectoryFieldNumber;
const int ImageProperties::kFileFieldNumber;
const int ImageProperties::kHduFieldNumber;
const int ImageProperties::kFileIdFieldNumber;
const int ImageProperties::kRenderModeFieldNumber;
const int ImageProperties::kChannelFieldNumber;
const int ImageProperties::kStokesFieldNumber;
const int ImageProperties::kRegionsFieldNumber;
const int ImageProperties::kContourSettingsFieldNumber;
const int ImageProperties::kStokesFilesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ImageProperties::ImageProperties()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_resume_5fsession_2eproto::scc_info_ImageProperties.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CARTA.ImageProperties)
}
ImageProperties::ImageProperties(const ImageProperties& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      stokes_files_(from.stokes_files_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  regions_.MergeFrom(from.regions_);
  directory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.directory().size() > 0) {
    directory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.directory_);
  }
  file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.file().size() > 0) {
    file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_);
  }
  hdu_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.hdu().size() > 0) {
    hdu_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hdu_);
  }
  if (from.has_contour_settings()) {
    contour_settings_ = new ::CARTA::SetContourParameters(*from.contour_settings_);
  } else {
    contour_settings_ = NULL;
  }
  ::memcpy(&file_id_, &from.file_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&stokes_) -
    reinterpret_cast<char*>(&file_id_)) + sizeof(stokes_));
  // @@protoc_insertion_point(copy_constructor:CARTA.ImageProperties)
}

void ImageProperties::SharedCtor() {
  directory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hdu_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&contour_settings_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stokes_) -
      reinterpret_cast<char*>(&contour_settings_)) + sizeof(stokes_));
}

ImageProperties::~ImageProperties() {
  // @@protoc_insertion_point(destructor:CARTA.ImageProperties)
  SharedDtor();
}

void ImageProperties::SharedDtor() {
  directory_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hdu_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete contour_settings_;
}

void ImageProperties::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ImageProperties::descriptor() {
  ::protobuf_resume_5fsession_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_resume_5fsession_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ImageProperties& ImageProperties::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_resume_5fsession_2eproto::scc_info_ImageProperties.base);
  return *internal_default_instance();
}


void ImageProperties::Clear() {
// @@protoc_insertion_point(message_clear_start:CARTA.ImageProperties)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  regions_.Clear();
  stokes_files_.Clear();
  directory_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hdu_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && contour_settings_ != NULL) {
    delete contour_settings_;
  }
  contour_settings_ = NULL;
  ::memset(&file_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stokes_) -
      reinterpret_cast<char*>(&file_id_)) + sizeof(stokes_));
  _internal_metadata_.Clear();
}

bool ImageProperties::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CARTA.ImageProperties)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string directory = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_directory()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->directory().data(), static_cast<int>(this->directory().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CARTA.ImageProperties.directory"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string file = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->file().data(), static_cast<int>(this->file().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CARTA.ImageProperties.file"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string hdu = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hdu()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->hdu().data(), static_cast<int>(this->hdu().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CARTA.ImageProperties.hdu"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sfixed32 file_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, &file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .CARTA.RenderMode render_mode = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_render_mode(static_cast< ::CARTA::RenderMode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sfixed32 channel = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, &channel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sfixed32 stokes = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, &stokes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<sfixed32, .CARTA.RegionInfo> regions = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          ImageProperties_RegionsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              ImageProperties_RegionsEntry_DoNotUse,
              ::google::protobuf::int32, ::CARTA::RegionInfo,
              ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int32, ::CARTA::RegionInfo > > parser(&regions_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .CARTA.SetContourParameters contour_settings = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_contour_settings()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CARTA.StokesFile stokes_files = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_stokes_files()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CARTA.ImageProperties)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CARTA.ImageProperties)
  return false;
#undef DO_
}

void ImageProperties::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CARTA.ImageProperties)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string directory = 1;
  if (this->directory().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->directory().data(), static_cast<int>(this->directory().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CARTA.ImageProperties.directory");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->directory(), output);
  }

  // string file = 2;
  if (this->file().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file().data(), static_cast<int>(this->file().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CARTA.ImageProperties.file");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->file(), output);
  }

  // string hdu = 3;
  if (this->hdu().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hdu().data(), static_cast<int>(this->hdu().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CARTA.ImageProperties.hdu");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->hdu(), output);
  }

  // sfixed32 file_id = 4;
  if (this->file_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32(4, this->file_id(), output);
  }

  // .CARTA.RenderMode render_mode = 5;
  if (this->render_mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->render_mode(), output);
  }

  // sfixed32 channel = 6;
  if (this->channel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32(6, this->channel(), output);
  }

  // sfixed32 stokes = 7;
  if (this->stokes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32(7, this->stokes(), output);
  }

  // map<sfixed32, .CARTA.RegionInfo> regions = 8;
  if (!this->regions().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::CARTA::RegionInfo >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->regions().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->regions().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::CARTA::RegionInfo >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::CARTA::RegionInfo >::const_iterator
          it = this->regions().begin();
          it != this->regions().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<ImageProperties_RegionsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(regions_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            8, *entry, output);
      }
    } else {
      ::std::unique_ptr<ImageProperties_RegionsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::CARTA::RegionInfo >::const_iterator
          it = this->regions().begin();
          it != this->regions().end(); ++it) {
        entry.reset(regions_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            8, *entry, output);
      }
    }
  }

  // .CARTA.SetContourParameters contour_settings = 9;
  if (this->has_contour_settings()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_contour_settings(), output);
  }

  // repeated .CARTA.StokesFile stokes_files = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stokes_files_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10,
      this->stokes_files(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CARTA.ImageProperties)
}

::google::protobuf::uint8* ImageProperties::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CARTA.ImageProperties)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string directory = 1;
  if (this->directory().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->directory().data(), static_cast<int>(this->directory().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CARTA.ImageProperties.directory");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->directory(), target);
  }

  // string file = 2;
  if (this->file().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file().data(), static_cast<int>(this->file().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CARTA.ImageProperties.file");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->file(), target);
  }

  // string hdu = 3;
  if (this->hdu().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hdu().data(), static_cast<int>(this->hdu().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CARTA.ImageProperties.hdu");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->hdu(), target);
  }

  // sfixed32 file_id = 4;
  if (this->file_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed32ToArray(4, this->file_id(), target);
  }

  // .CARTA.RenderMode render_mode = 5;
  if (this->render_mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->render_mode(), target);
  }

  // sfixed32 channel = 6;
  if (this->channel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed32ToArray(6, this->channel(), target);
  }

  // sfixed32 stokes = 7;
  if (this->stokes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed32ToArray(7, this->stokes(), target);
  }

  // map<sfixed32, .CARTA.RegionInfo> regions = 8;
  if (!this->regions().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::CARTA::RegionInfo >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->regions().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->regions().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::CARTA::RegionInfo >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::CARTA::RegionInfo >::const_iterator
          it = this->regions().begin();
          it != this->regions().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<ImageProperties_RegionsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(regions_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       8, *entry, deterministic, target);
;
      }
    } else {
      ::std::unique_ptr<ImageProperties_RegionsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::CARTA::RegionInfo >::const_iterator
          it = this->regions().begin();
          it != this->regions().end(); ++it) {
        entry.reset(regions_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       8, *entry, deterministic, target);
;
      }
    }
  }

  // .CARTA.SetContourParameters contour_settings = 9;
  if (this->has_contour_settings()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_contour_settings(), deterministic, target);
  }

  // repeated .CARTA.StokesFile stokes_files = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stokes_files_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->stokes_files(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CARTA.ImageProperties)
  return target;
}

size_t ImageProperties::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CARTA.ImageProperties)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<sfixed32, .CARTA.RegionInfo> regions = 8;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->regions_size());
  {
    ::std::unique_ptr<ImageProperties_RegionsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, ::CARTA::RegionInfo >::const_iterator
        it = this->regions().begin();
        it != this->regions().end(); ++it) {
      entry.reset(regions_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // repeated .CARTA.StokesFile stokes_files = 10;
  {
    unsigned int count = static_cast<unsigned int>(this->stokes_files_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->stokes_files(static_cast<int>(i)));
    }
  }

  // string directory = 1;
  if (this->directory().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->directory());
  }

  // string file = 2;
  if (this->file().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file());
  }

  // string hdu = 3;
  if (this->hdu().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->hdu());
  }

  // .CARTA.SetContourParameters contour_settings = 9;
  if (this->has_contour_settings()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *contour_settings_);
  }

  // sfixed32 file_id = 4;
  if (this->file_id() != 0) {
    total_size += 1 + 4;
  }

  // .CARTA.RenderMode render_mode = 5;
  if (this->render_mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->render_mode());
  }

  // sfixed32 channel = 6;
  if (this->channel() != 0) {
    total_size += 1 + 4;
  }

  // sfixed32 stokes = 7;
  if (this->stokes() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImageProperties::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CARTA.ImageProperties)
  GOOGLE_DCHECK_NE(&from, this);
  const ImageProperties* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ImageProperties>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CARTA.ImageProperties)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CARTA.ImageProperties)
    MergeFrom(*source);
  }
}

void ImageProperties::MergeFrom(const ImageProperties& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CARTA.ImageProperties)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  regions_.MergeFrom(from.regions_);
  stokes_files_.MergeFrom(from.stokes_files_);
  if (from.directory().size() > 0) {

    directory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.directory_);
  }
  if (from.file().size() > 0) {

    file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_);
  }
  if (from.hdu().size() > 0) {

    hdu_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hdu_);
  }
  if (from.has_contour_settings()) {
    mutable_contour_settings()->::CARTA::SetContourParameters::MergeFrom(from.contour_settings());
  }
  if (from.file_id() != 0) {
    set_file_id(from.file_id());
  }
  if (from.render_mode() != 0) {
    set_render_mode(from.render_mode());
  }
  if (from.channel() != 0) {
    set_channel(from.channel());
  }
  if (from.stokes() != 0) {
    set_stokes(from.stokes());
  }
}

void ImageProperties::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CARTA.ImageProperties)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImageProperties::CopyFrom(const ImageProperties& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CARTA.ImageProperties)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImageProperties::IsInitialized() const {
  return true;
}

void ImageProperties::Swap(ImageProperties* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ImageProperties::InternalSwap(ImageProperties* other) {
  using std::swap;
  regions_.Swap(&other->regions_);
  CastToBase(&stokes_files_)->InternalSwap(CastToBase(&other->stokes_files_));
  directory_.Swap(&other->directory_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  file_.Swap(&other->file_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  hdu_.Swap(&other->hdu_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(contour_settings_, other->contour_settings_);
  swap(file_id_, other->file_id_);
  swap(render_mode_, other->render_mode_);
  swap(channel_, other->channel_);
  swap(stokes_, other->stokes_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ImageProperties::GetMetadata() const {
  protobuf_resume_5fsession_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_resume_5fsession_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ResumeSession::InitAsDefaultInstance() {
}
void ResumeSession::clear_catalog_files() {
  catalog_files_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResumeSession::kImagesFieldNumber;
const int ResumeSession::kCatalogFilesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResumeSession::ResumeSession()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_resume_5fsession_2eproto::scc_info_ResumeSession.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CARTA.ResumeSession)
}
ResumeSession::ResumeSession(const ResumeSession& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      images_(from.images_),
      catalog_files_(from.catalog_files_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CARTA.ResumeSession)
}

void ResumeSession::SharedCtor() {
}

ResumeSession::~ResumeSession() {
  // @@protoc_insertion_point(destructor:CARTA.ResumeSession)
  SharedDtor();
}

void ResumeSession::SharedDtor() {
}

void ResumeSession::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ResumeSession::descriptor() {
  ::protobuf_resume_5fsession_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_resume_5fsession_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ResumeSession& ResumeSession::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_resume_5fsession_2eproto::scc_info_ResumeSession.base);
  return *internal_default_instance();
}


void ResumeSession::Clear() {
// @@protoc_insertion_point(message_clear_start:CARTA.ResumeSession)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  images_.Clear();
  catalog_files_.Clear();
  _internal_metadata_.Clear();
}

bool ResumeSession::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CARTA.ResumeSession)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CARTA.ImageProperties images = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_images()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CARTA.OpenCatalogFile catalog_files = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_catalog_files()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CARTA.ResumeSession)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CARTA.ResumeSession)
  return false;
#undef DO_
}

void ResumeSession::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CARTA.ResumeSession)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CARTA.ImageProperties images = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->images_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->images(static_cast<int>(i)),
      output);
  }

  // repeated .CARTA.OpenCatalogFile catalog_files = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->catalog_files_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->catalog_files(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CARTA.ResumeSession)
}

::google::protobuf::uint8* ResumeSession::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CARTA.ResumeSession)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CARTA.ImageProperties images = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->images_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->images(static_cast<int>(i)), deterministic, target);
  }

  // repeated .CARTA.OpenCatalogFile catalog_files = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->catalog_files_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->catalog_files(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CARTA.ResumeSession)
  return target;
}

size_t ResumeSession::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CARTA.ResumeSession)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .CARTA.ImageProperties images = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->images_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->images(static_cast<int>(i)));
    }
  }

  // repeated .CARTA.OpenCatalogFile catalog_files = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->catalog_files_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->catalog_files(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResumeSession::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CARTA.ResumeSession)
  GOOGLE_DCHECK_NE(&from, this);
  const ResumeSession* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResumeSession>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CARTA.ResumeSession)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CARTA.ResumeSession)
    MergeFrom(*source);
  }
}

void ResumeSession::MergeFrom(const ResumeSession& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CARTA.ResumeSession)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  images_.MergeFrom(from.images_);
  catalog_files_.MergeFrom(from.catalog_files_);
}

void ResumeSession::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CARTA.ResumeSession)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResumeSession::CopyFrom(const ResumeSession& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CARTA.ResumeSession)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResumeSession::IsInitialized() const {
  return true;
}

void ResumeSession::Swap(ResumeSession* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResumeSession::InternalSwap(ResumeSession* other) {
  using std::swap;
  CastToBase(&images_)->InternalSwap(CastToBase(&other->images_));
  CastToBase(&catalog_files_)->InternalSwap(CastToBase(&other->catalog_files_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ResumeSession::GetMetadata() const {
  protobuf_resume_5fsession_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_resume_5fsession_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ResumeSessionAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResumeSessionAck::kSuccessFieldNumber;
const int ResumeSessionAck::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResumeSessionAck::ResumeSessionAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_resume_5fsession_2eproto::scc_info_ResumeSessionAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CARTA.ResumeSessionAck)
}
ResumeSessionAck::ResumeSessionAck(const ResumeSessionAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:CARTA.ResumeSessionAck)
}

void ResumeSessionAck::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  success_ = false;
}

ResumeSessionAck::~ResumeSessionAck() {
  // @@protoc_insertion_point(destructor:CARTA.ResumeSessionAck)
  SharedDtor();
}

void ResumeSessionAck::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ResumeSessionAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ResumeSessionAck::descriptor() {
  ::protobuf_resume_5fsession_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_resume_5fsession_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ResumeSessionAck& ResumeSessionAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_resume_5fsession_2eproto::scc_info_ResumeSessionAck.base);
  return *internal_default_instance();
}


void ResumeSessionAck::Clear() {
// @@protoc_insertion_point(message_clear_start:CARTA.ResumeSessionAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  success_ = false;
  _internal_metadata_.Clear();
}

bool ResumeSessionAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CARTA.ResumeSessionAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool success = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CARTA.ResumeSessionAck.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CARTA.ResumeSessionAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CARTA.ResumeSessionAck)
  return false;
#undef DO_
}

void ResumeSessionAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CARTA.ResumeSessionAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CARTA.ResumeSessionAck.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CARTA.ResumeSessionAck)
}

::google::protobuf::uint8* ResumeSessionAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CARTA.ResumeSessionAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CARTA.ResumeSessionAck.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CARTA.ResumeSessionAck)
  return target;
}

size_t ResumeSessionAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CARTA.ResumeSessionAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // bool success = 1;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResumeSessionAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CARTA.ResumeSessionAck)
  GOOGLE_DCHECK_NE(&from, this);
  const ResumeSessionAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResumeSessionAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CARTA.ResumeSessionAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CARTA.ResumeSessionAck)
    MergeFrom(*source);
  }
}

void ResumeSessionAck::MergeFrom(const ResumeSessionAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CARTA.ResumeSessionAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.success() != 0) {
    set_success(from.success());
  }
}

void ResumeSessionAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CARTA.ResumeSessionAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResumeSessionAck::CopyFrom(const ResumeSessionAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CARTA.ResumeSessionAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResumeSessionAck::IsInitialized() const {
  return true;
}

void ResumeSessionAck::Swap(ResumeSessionAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResumeSessionAck::InternalSwap(ResumeSessionAck* other) {
  using std::swap;
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(success_, other->success_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ResumeSessionAck::GetMetadata() const {
  protobuf_resume_5fsession_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_resume_5fsession_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace CARTA
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CARTA::ImageProperties_RegionsEntry_DoNotUse* Arena::CreateMaybeMessage< ::CARTA::ImageProperties_RegionsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::CARTA::ImageProperties_RegionsEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CARTA::ImageProperties* Arena::CreateMaybeMessage< ::CARTA::ImageProperties >(Arena* arena) {
  return Arena::CreateInternal< ::CARTA::ImageProperties >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CARTA::ResumeSession* Arena::CreateMaybeMessage< ::CARTA::ResumeSession >(Arena* arena) {
  return Arena::CreateInternal< ::CARTA::ResumeSession >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CARTA::ResumeSessionAck* Arena::CreateMaybeMessage< ::CARTA::ResumeSessionAck >(Arena* arena) {
  return Arena::CreateInternal< ::CARTA::ResumeSessionAck >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
