// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: scripting.proto

#include "scripting.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace CARTA {
class ScriptingRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ScriptingRequest>
      _instance;
} _ScriptingRequest_default_instance_;
class ScriptingResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ScriptingResponse>
      _instance;
} _ScriptingResponse_default_instance_;
}  // namespace CARTA
namespace protobuf_scripting_2eproto {
static void InitDefaultsScriptingRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CARTA::_ScriptingRequest_default_instance_;
    new (ptr) ::CARTA::ScriptingRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CARTA::ScriptingRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ScriptingRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsScriptingRequest}, {}};

static void InitDefaultsScriptingResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CARTA::_ScriptingResponse_default_instance_;
    new (ptr) ::CARTA::ScriptingResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CARTA::ScriptingResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ScriptingResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsScriptingResponse}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ScriptingRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ScriptingResponse.base);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::ScriptingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::ScriptingRequest, scripting_request_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::ScriptingRequest, target_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::ScriptingRequest, action_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::ScriptingRequest, parameters_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::ScriptingRequest, async_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::ScriptingRequest, return_path_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::ScriptingResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::ScriptingResponse, scripting_request_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::ScriptingResponse, success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::ScriptingResponse, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::ScriptingResponse, response_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::CARTA::ScriptingRequest)},
  { 11, -1, sizeof(::CARTA::ScriptingResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::CARTA::_ScriptingRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::CARTA::_ScriptingResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "scripting.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017scripting.proto\022\005CARTA\"\210\001\n\020ScriptingRe"
      "quest\022\034\n\024scripting_request_id\030\001 \001(\017\022\016\n\006t"
      "arget\030\002 \001(\t\022\016\n\006action\030\003 \001(\t\022\022\n\nparameter"
      "s\030\004 \001(\t\022\r\n\005async\030\005 \001(\010\022\023\n\013return_path\030\006 "
      "\001(\t\"e\n\021ScriptingResponse\022\034\n\024scripting_re"
      "quest_id\030\001 \001(\017\022\017\n\007success\030\002 \001(\010\022\017\n\007messa"
      "ge\030\003 \001(\t\022\020\n\010response\030\004 \001(\tb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 274);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "scripting.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_scripting_2eproto
namespace CARTA {

// ===================================================================

void ScriptingRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ScriptingRequest::kScriptingRequestIdFieldNumber;
const int ScriptingRequest::kTargetFieldNumber;
const int ScriptingRequest::kActionFieldNumber;
const int ScriptingRequest::kParametersFieldNumber;
const int ScriptingRequest::kAsyncFieldNumber;
const int ScriptingRequest::kReturnPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ScriptingRequest::ScriptingRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_scripting_2eproto::scc_info_ScriptingRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CARTA.ScriptingRequest)
}
ScriptingRequest::ScriptingRequest(const ScriptingRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  target_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.target().size() > 0) {
    target_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_);
  }
  action_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.action().size() > 0) {
    action_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.action_);
  }
  parameters_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parameters().size() > 0) {
    parameters_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parameters_);
  }
  return_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.return_path().size() > 0) {
    return_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.return_path_);
  }
  ::memcpy(&scripting_request_id_, &from.scripting_request_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&async_) -
    reinterpret_cast<char*>(&scripting_request_id_)) + sizeof(async_));
  // @@protoc_insertion_point(copy_constructor:CARTA.ScriptingRequest)
}

void ScriptingRequest::SharedCtor() {
  target_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  action_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parameters_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  return_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&scripting_request_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&async_) -
      reinterpret_cast<char*>(&scripting_request_id_)) + sizeof(async_));
}

ScriptingRequest::~ScriptingRequest() {
  // @@protoc_insertion_point(destructor:CARTA.ScriptingRequest)
  SharedDtor();
}

void ScriptingRequest::SharedDtor() {
  target_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  action_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parameters_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  return_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ScriptingRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ScriptingRequest::descriptor() {
  ::protobuf_scripting_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_scripting_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ScriptingRequest& ScriptingRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_scripting_2eproto::scc_info_ScriptingRequest.base);
  return *internal_default_instance();
}


void ScriptingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CARTA.ScriptingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  target_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  action_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parameters_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  return_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&scripting_request_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&async_) -
      reinterpret_cast<char*>(&scripting_request_id_)) + sizeof(async_));
  _internal_metadata_.Clear();
}

bool ScriptingRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CARTA.ScriptingRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // sfixed32 scripting_request_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, &scripting_request_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string target = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_target()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->target().data(), static_cast<int>(this->target().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CARTA.ScriptingRequest.target"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string action = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_action()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->action().data(), static_cast<int>(this->action().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CARTA.ScriptingRequest.action"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string parameters = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parameters()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parameters().data(), static_cast<int>(this->parameters().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CARTA.ScriptingRequest.parameters"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool async = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &async_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string return_path = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_return_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->return_path().data(), static_cast<int>(this->return_path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CARTA.ScriptingRequest.return_path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CARTA.ScriptingRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CARTA.ScriptingRequest)
  return false;
#undef DO_
}

void ScriptingRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CARTA.ScriptingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sfixed32 scripting_request_id = 1;
  if (this->scripting_request_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32(1, this->scripting_request_id(), output);
  }

  // string target = 2;
  if (this->target().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target().data(), static_cast<int>(this->target().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CARTA.ScriptingRequest.target");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->target(), output);
  }

  // string action = 3;
  if (this->action().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->action().data(), static_cast<int>(this->action().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CARTA.ScriptingRequest.action");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->action(), output);
  }

  // string parameters = 4;
  if (this->parameters().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parameters().data(), static_cast<int>(this->parameters().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CARTA.ScriptingRequest.parameters");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->parameters(), output);
  }

  // bool async = 5;
  if (this->async() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->async(), output);
  }

  // string return_path = 6;
  if (this->return_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->return_path().data(), static_cast<int>(this->return_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CARTA.ScriptingRequest.return_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->return_path(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CARTA.ScriptingRequest)
}

::google::protobuf::uint8* ScriptingRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CARTA.ScriptingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sfixed32 scripting_request_id = 1;
  if (this->scripting_request_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed32ToArray(1, this->scripting_request_id(), target);
  }

  // string target = 2;
  if (this->target().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target().data(), static_cast<int>(this->target().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CARTA.ScriptingRequest.target");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->target(), target);
  }

  // string action = 3;
  if (this->action().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->action().data(), static_cast<int>(this->action().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CARTA.ScriptingRequest.action");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->action(), target);
  }

  // string parameters = 4;
  if (this->parameters().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parameters().data(), static_cast<int>(this->parameters().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CARTA.ScriptingRequest.parameters");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->parameters(), target);
  }

  // bool async = 5;
  if (this->async() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->async(), target);
  }

  // string return_path = 6;
  if (this->return_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->return_path().data(), static_cast<int>(this->return_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CARTA.ScriptingRequest.return_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->return_path(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CARTA.ScriptingRequest)
  return target;
}

size_t ScriptingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CARTA.ScriptingRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string target = 2;
  if (this->target().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->target());
  }

  // string action = 3;
  if (this->action().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->action());
  }

  // string parameters = 4;
  if (this->parameters().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parameters());
  }

  // string return_path = 6;
  if (this->return_path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->return_path());
  }

  // sfixed32 scripting_request_id = 1;
  if (this->scripting_request_id() != 0) {
    total_size += 1 + 4;
  }

  // bool async = 5;
  if (this->async() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ScriptingRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CARTA.ScriptingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ScriptingRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ScriptingRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CARTA.ScriptingRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CARTA.ScriptingRequest)
    MergeFrom(*source);
  }
}

void ScriptingRequest::MergeFrom(const ScriptingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CARTA.ScriptingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target().size() > 0) {

    target_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_);
  }
  if (from.action().size() > 0) {

    action_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.action_);
  }
  if (from.parameters().size() > 0) {

    parameters_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parameters_);
  }
  if (from.return_path().size() > 0) {

    return_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.return_path_);
  }
  if (from.scripting_request_id() != 0) {
    set_scripting_request_id(from.scripting_request_id());
  }
  if (from.async() != 0) {
    set_async(from.async());
  }
}

void ScriptingRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CARTA.ScriptingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScriptingRequest::CopyFrom(const ScriptingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CARTA.ScriptingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScriptingRequest::IsInitialized() const {
  return true;
}

void ScriptingRequest::Swap(ScriptingRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ScriptingRequest::InternalSwap(ScriptingRequest* other) {
  using std::swap;
  target_.Swap(&other->target_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  action_.Swap(&other->action_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  parameters_.Swap(&other->parameters_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  return_path_.Swap(&other->return_path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(scripting_request_id_, other->scripting_request_id_);
  swap(async_, other->async_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ScriptingRequest::GetMetadata() const {
  protobuf_scripting_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_scripting_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ScriptingResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ScriptingResponse::kScriptingRequestIdFieldNumber;
const int ScriptingResponse::kSuccessFieldNumber;
const int ScriptingResponse::kMessageFieldNumber;
const int ScriptingResponse::kResponseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ScriptingResponse::ScriptingResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_scripting_2eproto::scc_info_ScriptingResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CARTA.ScriptingResponse)
}
ScriptingResponse::ScriptingResponse(const ScriptingResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  response_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.response().size() > 0) {
    response_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.response_);
  }
  ::memcpy(&scripting_request_id_, &from.scripting_request_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&success_) -
    reinterpret_cast<char*>(&scripting_request_id_)) + sizeof(success_));
  // @@protoc_insertion_point(copy_constructor:CARTA.ScriptingResponse)
}

void ScriptingResponse::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  response_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&scripting_request_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&success_) -
      reinterpret_cast<char*>(&scripting_request_id_)) + sizeof(success_));
}

ScriptingResponse::~ScriptingResponse() {
  // @@protoc_insertion_point(destructor:CARTA.ScriptingResponse)
  SharedDtor();
}

void ScriptingResponse::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  response_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ScriptingResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ScriptingResponse::descriptor() {
  ::protobuf_scripting_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_scripting_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ScriptingResponse& ScriptingResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_scripting_2eproto::scc_info_ScriptingResponse.base);
  return *internal_default_instance();
}


void ScriptingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CARTA.ScriptingResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  response_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&scripting_request_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&success_) -
      reinterpret_cast<char*>(&scripting_request_id_)) + sizeof(success_));
  _internal_metadata_.Clear();
}

bool ScriptingResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CARTA.ScriptingResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // sfixed32 scripting_request_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, &scripting_request_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool success = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CARTA.ScriptingResponse.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string response = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_response()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->response().data(), static_cast<int>(this->response().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CARTA.ScriptingResponse.response"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CARTA.ScriptingResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CARTA.ScriptingResponse)
  return false;
#undef DO_
}

void ScriptingResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CARTA.ScriptingResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sfixed32 scripting_request_id = 1;
  if (this->scripting_request_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32(1, this->scripting_request_id(), output);
  }

  // bool success = 2;
  if (this->success() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->success(), output);
  }

  // string message = 3;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CARTA.ScriptingResponse.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->message(), output);
  }

  // string response = 4;
  if (this->response().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->response().data(), static_cast<int>(this->response().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CARTA.ScriptingResponse.response");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->response(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CARTA.ScriptingResponse)
}

::google::protobuf::uint8* ScriptingResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CARTA.ScriptingResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sfixed32 scripting_request_id = 1;
  if (this->scripting_request_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed32ToArray(1, this->scripting_request_id(), target);
  }

  // bool success = 2;
  if (this->success() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->success(), target);
  }

  // string message = 3;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CARTA.ScriptingResponse.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->message(), target);
  }

  // string response = 4;
  if (this->response().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->response().data(), static_cast<int>(this->response().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CARTA.ScriptingResponse.response");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->response(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CARTA.ScriptingResponse)
  return target;
}

size_t ScriptingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CARTA.ScriptingResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string message = 3;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // string response = 4;
  if (this->response().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->response());
  }

  // sfixed32 scripting_request_id = 1;
  if (this->scripting_request_id() != 0) {
    total_size += 1 + 4;
  }

  // bool success = 2;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ScriptingResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CARTA.ScriptingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ScriptingResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ScriptingResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CARTA.ScriptingResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CARTA.ScriptingResponse)
    MergeFrom(*source);
  }
}

void ScriptingResponse::MergeFrom(const ScriptingResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CARTA.ScriptingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.response().size() > 0) {

    response_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.response_);
  }
  if (from.scripting_request_id() != 0) {
    set_scripting_request_id(from.scripting_request_id());
  }
  if (from.success() != 0) {
    set_success(from.success());
  }
}

void ScriptingResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CARTA.ScriptingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScriptingResponse::CopyFrom(const ScriptingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CARTA.ScriptingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScriptingResponse::IsInitialized() const {
  return true;
}

void ScriptingResponse::Swap(ScriptingResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ScriptingResponse::InternalSwap(ScriptingResponse* other) {
  using std::swap;
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  response_.Swap(&other->response_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(scripting_request_id_, other->scripting_request_id_);
  swap(success_, other->success_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ScriptingResponse::GetMetadata() const {
  protobuf_scripting_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_scripting_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace CARTA
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CARTA::ScriptingRequest* Arena::CreateMaybeMessage< ::CARTA::ScriptingRequest >(Arena* arena) {
  return Arena::CreateInternal< ::CARTA::ScriptingRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CARTA::ScriptingResponse* Arena::CreateMaybeMessage< ::CARTA::ScriptingResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CARTA::ScriptingResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
