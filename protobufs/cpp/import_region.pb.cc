// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: import_region.proto

#include "import_region.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_defs_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_defs_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RegionStyle;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_defs_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_RegionInfo;
}  // namespace protobuf_defs_2eproto
namespace protobuf_import_5fregion_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_import_5fregion_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ImportRegionAck_RegionStylesEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_import_5fregion_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ImportRegionAck_RegionsEntry_DoNotUse;
}  // namespace protobuf_import_5fregion_2eproto
namespace CARTA {
class ImportRegionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ImportRegion>
      _instance;
} _ImportRegion_default_instance_;
class ImportRegionAck_RegionsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ImportRegionAck_RegionsEntry_DoNotUse>
      _instance;
} _ImportRegionAck_RegionsEntry_DoNotUse_default_instance_;
class ImportRegionAck_RegionStylesEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ImportRegionAck_RegionStylesEntry_DoNotUse>
      _instance;
} _ImportRegionAck_RegionStylesEntry_DoNotUse_default_instance_;
class ImportRegionAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ImportRegionAck>
      _instance;
} _ImportRegionAck_default_instance_;
}  // namespace CARTA
namespace protobuf_import_5fregion_2eproto {
static void InitDefaultsImportRegion() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CARTA::_ImportRegion_default_instance_;
    new (ptr) ::CARTA::ImportRegion();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CARTA::ImportRegion::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ImportRegion =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsImportRegion}, {}};

static void InitDefaultsImportRegionAck_RegionsEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CARTA::_ImportRegionAck_RegionsEntry_DoNotUse_default_instance_;
    new (ptr) ::CARTA::ImportRegionAck_RegionsEntry_DoNotUse();
  }
  ::CARTA::ImportRegionAck_RegionsEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ImportRegionAck_RegionsEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsImportRegionAck_RegionsEntry_DoNotUse}, {
      &protobuf_defs_2eproto::scc_info_RegionInfo.base,}};

static void InitDefaultsImportRegionAck_RegionStylesEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CARTA::_ImportRegionAck_RegionStylesEntry_DoNotUse_default_instance_;
    new (ptr) ::CARTA::ImportRegionAck_RegionStylesEntry_DoNotUse();
  }
  ::CARTA::ImportRegionAck_RegionStylesEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ImportRegionAck_RegionStylesEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsImportRegionAck_RegionStylesEntry_DoNotUse}, {
      &protobuf_defs_2eproto::scc_info_RegionStyle.base,}};

static void InitDefaultsImportRegionAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CARTA::_ImportRegionAck_default_instance_;
    new (ptr) ::CARTA::ImportRegionAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CARTA::ImportRegionAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ImportRegionAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsImportRegionAck}, {
      &protobuf_import_5fregion_2eproto::scc_info_ImportRegionAck_RegionsEntry_DoNotUse.base,
      &protobuf_import_5fregion_2eproto::scc_info_ImportRegionAck_RegionStylesEntry_DoNotUse.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ImportRegion.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ImportRegionAck_RegionsEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ImportRegionAck_RegionStylesEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ImportRegionAck.base);
}

::google::protobuf::Metadata file_level_metadata[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::ImportRegion, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::ImportRegion, group_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::ImportRegion, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::ImportRegion, directory_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::ImportRegion, file_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::ImportRegion, contents_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::ImportRegionAck_RegionsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::ImportRegionAck_RegionsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::ImportRegionAck_RegionsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::ImportRegionAck_RegionsEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::ImportRegionAck_RegionStylesEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::ImportRegionAck_RegionStylesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::ImportRegionAck_RegionStylesEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::ImportRegionAck_RegionStylesEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::ImportRegionAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::ImportRegionAck, success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::ImportRegionAck, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::ImportRegionAck, regions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::ImportRegionAck, region_styles_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::CARTA::ImportRegion)},
  { 10, 17, sizeof(::CARTA::ImportRegionAck_RegionsEntry_DoNotUse)},
  { 19, 26, sizeof(::CARTA::ImportRegionAck_RegionStylesEntry_DoNotUse)},
  { 28, -1, sizeof(::CARTA::ImportRegionAck)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::CARTA::_ImportRegion_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::CARTA::_ImportRegionAck_RegionsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::CARTA::_ImportRegionAck_RegionStylesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::CARTA::_ImportRegionAck_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "import_region.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\023import_region.proto\022\005CARTA\032\ndefs.proto"
      "\032\013enums.proto\"r\n\014ImportRegion\022\020\n\010group_i"
      "d\030\001 \001(\017\022\035\n\004type\030\002 \001(\0162\017.CARTA.FileType\022\021"
      "\n\tdirectory\030\003 \001(\t\022\014\n\004file\030\004 \001(\t\022\020\n\010conte"
      "nts\030\005 \003(\t\"\266\002\n\017ImportRegionAck\022\017\n\007success"
      "\030\001 \001(\010\022\017\n\007message\030\002 \001(\t\0224\n\007regions\030\003 \003(\013"
      "2#.CARTA.ImportRegionAck.RegionsEntry\022\?\n"
      "\rregion_styles\030\004 \003(\0132(.CARTA.ImportRegio"
      "nAck.RegionStylesEntry\032A\n\014RegionsEntry\022\013"
      "\n\003key\030\001 \001(\017\022 \n\005value\030\002 \001(\0132\021.CARTA.Regio"
      "nInfo:\0028\001\032G\n\021RegionStylesEntry\022\013\n\003key\030\001 "
      "\001(\017\022!\n\005value\030\002 \001(\0132\022.CARTA.RegionStyle:\002"
      "8\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 490);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "import_region.proto", &protobuf_RegisterTypes);
  ::protobuf_defs_2eproto::AddDescriptors();
  ::protobuf_enums_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_import_5fregion_2eproto
namespace CARTA {

// ===================================================================

void ImportRegion::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ImportRegion::kGroupIdFieldNumber;
const int ImportRegion::kTypeFieldNumber;
const int ImportRegion::kDirectoryFieldNumber;
const int ImportRegion::kFileFieldNumber;
const int ImportRegion::kContentsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ImportRegion::ImportRegion()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_import_5fregion_2eproto::scc_info_ImportRegion.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CARTA.ImportRegion)
}
ImportRegion::ImportRegion(const ImportRegion& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      contents_(from.contents_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  directory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.directory().size() > 0) {
    directory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.directory_);
  }
  file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.file().size() > 0) {
    file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_);
  }
  ::memcpy(&group_id_, &from.group_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&group_id_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:CARTA.ImportRegion)
}

void ImportRegion::SharedCtor() {
  directory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&group_id_)) + sizeof(type_));
}

ImportRegion::~ImportRegion() {
  // @@protoc_insertion_point(destructor:CARTA.ImportRegion)
  SharedDtor();
}

void ImportRegion::SharedDtor() {
  directory_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ImportRegion::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ImportRegion::descriptor() {
  ::protobuf_import_5fregion_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_import_5fregion_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ImportRegion& ImportRegion::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_import_5fregion_2eproto::scc_info_ImportRegion.base);
  return *internal_default_instance();
}


void ImportRegion::Clear() {
// @@protoc_insertion_point(message_clear_start:CARTA.ImportRegion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  contents_.Clear();
  directory_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&group_id_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

bool ImportRegion::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CARTA.ImportRegion)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // sfixed32 group_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .CARTA.FileType type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::CARTA::FileType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string directory = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_directory()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->directory().data(), static_cast<int>(this->directory().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CARTA.ImportRegion.directory"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string file = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->file().data(), static_cast<int>(this->file().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CARTA.ImportRegion.file"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string contents = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_contents()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->contents(this->contents_size() - 1).data(),
            static_cast<int>(this->contents(this->contents_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CARTA.ImportRegion.contents"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CARTA.ImportRegion)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CARTA.ImportRegion)
  return false;
#undef DO_
}

void ImportRegion::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CARTA.ImportRegion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sfixed32 group_id = 1;
  if (this->group_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32(1, this->group_id(), output);
  }

  // .CARTA.FileType type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // string directory = 3;
  if (this->directory().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->directory().data(), static_cast<int>(this->directory().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CARTA.ImportRegion.directory");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->directory(), output);
  }

  // string file = 4;
  if (this->file().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file().data(), static_cast<int>(this->file().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CARTA.ImportRegion.file");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->file(), output);
  }

  // repeated string contents = 5;
  for (int i = 0, n = this->contents_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contents(i).data(), static_cast<int>(this->contents(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CARTA.ImportRegion.contents");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->contents(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CARTA.ImportRegion)
}

::google::protobuf::uint8* ImportRegion::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CARTA.ImportRegion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sfixed32 group_id = 1;
  if (this->group_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed32ToArray(1, this->group_id(), target);
  }

  // .CARTA.FileType type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  // string directory = 3;
  if (this->directory().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->directory().data(), static_cast<int>(this->directory().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CARTA.ImportRegion.directory");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->directory(), target);
  }

  // string file = 4;
  if (this->file().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file().data(), static_cast<int>(this->file().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CARTA.ImportRegion.file");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->file(), target);
  }

  // repeated string contents = 5;
  for (int i = 0, n = this->contents_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contents(i).data(), static_cast<int>(this->contents(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CARTA.ImportRegion.contents");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->contents(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CARTA.ImportRegion)
  return target;
}

size_t ImportRegion::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CARTA.ImportRegion)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string contents = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->contents_size());
  for (int i = 0, n = this->contents_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->contents(i));
  }

  // string directory = 3;
  if (this->directory().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->directory());
  }

  // string file = 4;
  if (this->file().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file());
  }

  // sfixed32 group_id = 1;
  if (this->group_id() != 0) {
    total_size += 1 + 4;
  }

  // .CARTA.FileType type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImportRegion::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CARTA.ImportRegion)
  GOOGLE_DCHECK_NE(&from, this);
  const ImportRegion* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ImportRegion>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CARTA.ImportRegion)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CARTA.ImportRegion)
    MergeFrom(*source);
  }
}

void ImportRegion::MergeFrom(const ImportRegion& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CARTA.ImportRegion)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  contents_.MergeFrom(from.contents_);
  if (from.directory().size() > 0) {

    directory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.directory_);
  }
  if (from.file().size() > 0) {

    file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_);
  }
  if (from.group_id() != 0) {
    set_group_id(from.group_id());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void ImportRegion::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CARTA.ImportRegion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImportRegion::CopyFrom(const ImportRegion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CARTA.ImportRegion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImportRegion::IsInitialized() const {
  return true;
}

void ImportRegion::Swap(ImportRegion* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ImportRegion::InternalSwap(ImportRegion* other) {
  using std::swap;
  contents_.InternalSwap(CastToBase(&other->contents_));
  directory_.Swap(&other->directory_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  file_.Swap(&other->file_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(group_id_, other->group_id_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ImportRegion::GetMetadata() const {
  protobuf_import_5fregion_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_import_5fregion_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

ImportRegionAck_RegionsEntry_DoNotUse::ImportRegionAck_RegionsEntry_DoNotUse() {}
ImportRegionAck_RegionsEntry_DoNotUse::ImportRegionAck_RegionsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void ImportRegionAck_RegionsEntry_DoNotUse::MergeFrom(const ImportRegionAck_RegionsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata ImportRegionAck_RegionsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_import_5fregion_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_import_5fregion_2eproto::file_level_metadata[1];
}
void ImportRegionAck_RegionsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

ImportRegionAck_RegionStylesEntry_DoNotUse::ImportRegionAck_RegionStylesEntry_DoNotUse() {}
ImportRegionAck_RegionStylesEntry_DoNotUse::ImportRegionAck_RegionStylesEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void ImportRegionAck_RegionStylesEntry_DoNotUse::MergeFrom(const ImportRegionAck_RegionStylesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata ImportRegionAck_RegionStylesEntry_DoNotUse::GetMetadata() const {
  ::protobuf_import_5fregion_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_import_5fregion_2eproto::file_level_metadata[2];
}
void ImportRegionAck_RegionStylesEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void ImportRegionAck::InitAsDefaultInstance() {
}
void ImportRegionAck::clear_regions() {
  regions_.Clear();
}
void ImportRegionAck::clear_region_styles() {
  region_styles_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ImportRegionAck::kSuccessFieldNumber;
const int ImportRegionAck::kMessageFieldNumber;
const int ImportRegionAck::kRegionsFieldNumber;
const int ImportRegionAck::kRegionStylesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ImportRegionAck::ImportRegionAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_import_5fregion_2eproto::scc_info_ImportRegionAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CARTA.ImportRegionAck)
}
ImportRegionAck::ImportRegionAck(const ImportRegionAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  regions_.MergeFrom(from.regions_);
  region_styles_.MergeFrom(from.region_styles_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:CARTA.ImportRegionAck)
}

void ImportRegionAck::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  success_ = false;
}

ImportRegionAck::~ImportRegionAck() {
  // @@protoc_insertion_point(destructor:CARTA.ImportRegionAck)
  SharedDtor();
}

void ImportRegionAck::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ImportRegionAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ImportRegionAck::descriptor() {
  ::protobuf_import_5fregion_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_import_5fregion_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ImportRegionAck& ImportRegionAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_import_5fregion_2eproto::scc_info_ImportRegionAck.base);
  return *internal_default_instance();
}


void ImportRegionAck::Clear() {
// @@protoc_insertion_point(message_clear_start:CARTA.ImportRegionAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  regions_.Clear();
  region_styles_.Clear();
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  success_ = false;
  _internal_metadata_.Clear();
}

bool ImportRegionAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CARTA.ImportRegionAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool success = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CARTA.ImportRegionAck.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<sfixed32, .CARTA.RegionInfo> regions = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          ImportRegionAck_RegionsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              ImportRegionAck_RegionsEntry_DoNotUse,
              ::google::protobuf::int32, ::CARTA::RegionInfo,
              ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int32, ::CARTA::RegionInfo > > parser(&regions_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<sfixed32, .CARTA.RegionStyle> region_styles = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          ImportRegionAck_RegionStylesEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              ImportRegionAck_RegionStylesEntry_DoNotUse,
              ::google::protobuf::int32, ::CARTA::RegionStyle,
              ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int32, ::CARTA::RegionStyle > > parser(&region_styles_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CARTA.ImportRegionAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CARTA.ImportRegionAck)
  return false;
#undef DO_
}

void ImportRegionAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CARTA.ImportRegionAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CARTA.ImportRegionAck.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  // map<sfixed32, .CARTA.RegionInfo> regions = 3;
  if (!this->regions().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::CARTA::RegionInfo >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->regions().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->regions().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::CARTA::RegionInfo >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::CARTA::RegionInfo >::const_iterator
          it = this->regions().begin();
          it != this->regions().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<ImportRegionAck_RegionsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(regions_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
      }
    } else {
      ::std::unique_ptr<ImportRegionAck_RegionsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::CARTA::RegionInfo >::const_iterator
          it = this->regions().begin();
          it != this->regions().end(); ++it) {
        entry.reset(regions_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
      }
    }
  }

  // map<sfixed32, .CARTA.RegionStyle> region_styles = 4;
  if (!this->region_styles().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::CARTA::RegionStyle >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->region_styles().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->region_styles().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::CARTA::RegionStyle >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::CARTA::RegionStyle >::const_iterator
          it = this->region_styles().begin();
          it != this->region_styles().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<ImportRegionAck_RegionStylesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(region_styles_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
      }
    } else {
      ::std::unique_ptr<ImportRegionAck_RegionStylesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::CARTA::RegionStyle >::const_iterator
          it = this->region_styles().begin();
          it != this->region_styles().end(); ++it) {
        entry.reset(region_styles_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CARTA.ImportRegionAck)
}

::google::protobuf::uint8* ImportRegionAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CARTA.ImportRegionAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CARTA.ImportRegionAck.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  // map<sfixed32, .CARTA.RegionInfo> regions = 3;
  if (!this->regions().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::CARTA::RegionInfo >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->regions().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->regions().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::CARTA::RegionInfo >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::CARTA::RegionInfo >::const_iterator
          it = this->regions().begin();
          it != this->regions().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<ImportRegionAck_RegionsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(regions_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
      }
    } else {
      ::std::unique_ptr<ImportRegionAck_RegionsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::CARTA::RegionInfo >::const_iterator
          it = this->regions().begin();
          it != this->regions().end(); ++it) {
        entry.reset(regions_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
      }
    }
  }

  // map<sfixed32, .CARTA.RegionStyle> region_styles = 4;
  if (!this->region_styles().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::CARTA::RegionStyle >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->region_styles().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->region_styles().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::CARTA::RegionStyle >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::CARTA::RegionStyle >::const_iterator
          it = this->region_styles().begin();
          it != this->region_styles().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<ImportRegionAck_RegionStylesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(region_styles_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
      }
    } else {
      ::std::unique_ptr<ImportRegionAck_RegionStylesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::CARTA::RegionStyle >::const_iterator
          it = this->region_styles().begin();
          it != this->region_styles().end(); ++it) {
        entry.reset(region_styles_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CARTA.ImportRegionAck)
  return target;
}

size_t ImportRegionAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CARTA.ImportRegionAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<sfixed32, .CARTA.RegionInfo> regions = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->regions_size());
  {
    ::std::unique_ptr<ImportRegionAck_RegionsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, ::CARTA::RegionInfo >::const_iterator
        it = this->regions().begin();
        it != this->regions().end(); ++it) {
      entry.reset(regions_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<sfixed32, .CARTA.RegionStyle> region_styles = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->region_styles_size());
  {
    ::std::unique_ptr<ImportRegionAck_RegionStylesEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, ::CARTA::RegionStyle >::const_iterator
        it = this->region_styles().begin();
        it != this->region_styles().end(); ++it) {
      entry.reset(region_styles_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // bool success = 1;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImportRegionAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CARTA.ImportRegionAck)
  GOOGLE_DCHECK_NE(&from, this);
  const ImportRegionAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ImportRegionAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CARTA.ImportRegionAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CARTA.ImportRegionAck)
    MergeFrom(*source);
  }
}

void ImportRegionAck::MergeFrom(const ImportRegionAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CARTA.ImportRegionAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  regions_.MergeFrom(from.regions_);
  region_styles_.MergeFrom(from.region_styles_);
  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.success() != 0) {
    set_success(from.success());
  }
}

void ImportRegionAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CARTA.ImportRegionAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImportRegionAck::CopyFrom(const ImportRegionAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CARTA.ImportRegionAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImportRegionAck::IsInitialized() const {
  return true;
}

void ImportRegionAck::Swap(ImportRegionAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ImportRegionAck::InternalSwap(ImportRegionAck* other) {
  using std::swap;
  regions_.Swap(&other->regions_);
  region_styles_.Swap(&other->region_styles_);
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(success_, other->success_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ImportRegionAck::GetMetadata() const {
  protobuf_import_5fregion_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_import_5fregion_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace CARTA
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CARTA::ImportRegion* Arena::CreateMaybeMessage< ::CARTA::ImportRegion >(Arena* arena) {
  return Arena::CreateInternal< ::CARTA::ImportRegion >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CARTA::ImportRegionAck_RegionsEntry_DoNotUse* Arena::CreateMaybeMessage< ::CARTA::ImportRegionAck_RegionsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::CARTA::ImportRegionAck_RegionsEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CARTA::ImportRegionAck_RegionStylesEntry_DoNotUse* Arena::CreateMaybeMessage< ::CARTA::ImportRegionAck_RegionStylesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::CARTA::ImportRegionAck_RegionStylesEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CARTA::ImportRegionAck* Arena::CreateMaybeMessage< ::CARTA::ImportRegionAck >(Arena* arena) {
  return Arena::CreateInternal< ::CARTA::ImportRegionAck >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
