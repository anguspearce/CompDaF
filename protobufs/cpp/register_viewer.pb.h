// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: register_viewer.proto

#ifndef PROTOBUF_INCLUDED_register_5fviewer_2eproto
#define PROTOBUF_INCLUDED_register_5fviewer_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
#include "enums.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_register_5fviewer_2eproto 

namespace protobuf_register_5fviewer_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[4];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_register_5fviewer_2eproto
namespace CARTA {
class RegisterViewer;
class RegisterViewerDefaultTypeInternal;
extern RegisterViewerDefaultTypeInternal _RegisterViewer_default_instance_;
class RegisterViewerAck;
class RegisterViewerAckDefaultTypeInternal;
extern RegisterViewerAckDefaultTypeInternal _RegisterViewerAck_default_instance_;
class RegisterViewerAck_UserLayoutsEntry_DoNotUse;
class RegisterViewerAck_UserLayoutsEntry_DoNotUseDefaultTypeInternal;
extern RegisterViewerAck_UserLayoutsEntry_DoNotUseDefaultTypeInternal _RegisterViewerAck_UserLayoutsEntry_DoNotUse_default_instance_;
class RegisterViewerAck_UserPreferencesEntry_DoNotUse;
class RegisterViewerAck_UserPreferencesEntry_DoNotUseDefaultTypeInternal;
extern RegisterViewerAck_UserPreferencesEntry_DoNotUseDefaultTypeInternal _RegisterViewerAck_UserPreferencesEntry_DoNotUse_default_instance_;
}  // namespace CARTA
namespace google {
namespace protobuf {
template<> ::CARTA::RegisterViewer* Arena::CreateMaybeMessage<::CARTA::RegisterViewer>(Arena*);
template<> ::CARTA::RegisterViewerAck* Arena::CreateMaybeMessage<::CARTA::RegisterViewerAck>(Arena*);
template<> ::CARTA::RegisterViewerAck_UserLayoutsEntry_DoNotUse* Arena::CreateMaybeMessage<::CARTA::RegisterViewerAck_UserLayoutsEntry_DoNotUse>(Arena*);
template<> ::CARTA::RegisterViewerAck_UserPreferencesEntry_DoNotUse* Arena::CreateMaybeMessage<::CARTA::RegisterViewerAck_UserPreferencesEntry_DoNotUse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace CARTA {

// ===================================================================

class RegisterViewer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CARTA.RegisterViewer) */ {
 public:
  RegisterViewer();
  virtual ~RegisterViewer();

  RegisterViewer(const RegisterViewer& from);

  inline RegisterViewer& operator=(const RegisterViewer& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RegisterViewer(RegisterViewer&& from) noexcept
    : RegisterViewer() {
    *this = ::std::move(from);
  }

  inline RegisterViewer& operator=(RegisterViewer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RegisterViewer& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RegisterViewer* internal_default_instance() {
    return reinterpret_cast<const RegisterViewer*>(
               &_RegisterViewer_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(RegisterViewer* other);
  friend void swap(RegisterViewer& a, RegisterViewer& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RegisterViewer* New() const final {
    return CreateMaybeMessage<RegisterViewer>(NULL);
  }

  RegisterViewer* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RegisterViewer>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RegisterViewer& from);
  void MergeFrom(const RegisterViewer& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RegisterViewer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string api_key = 2;
  void clear_api_key();
  static const int kApiKeyFieldNumber = 2;
  const ::std::string& api_key() const;
  void set_api_key(const ::std::string& value);
  #if LANG_CXX11
  void set_api_key(::std::string&& value);
  #endif
  void set_api_key(const char* value);
  void set_api_key(const char* value, size_t size);
  ::std::string* mutable_api_key();
  ::std::string* release_api_key();
  void set_allocated_api_key(::std::string* api_key);

  // fixed32 session_id = 1;
  void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  ::google::protobuf::uint32 session_id() const;
  void set_session_id(::google::protobuf::uint32 value);

  // fixed32 client_feature_flags = 3;
  void clear_client_feature_flags();
  static const int kClientFeatureFlagsFieldNumber = 3;
  ::google::protobuf::uint32 client_feature_flags() const;
  void set_client_feature_flags(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CARTA.RegisterViewer)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr api_key_;
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 client_feature_flags_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_register_5fviewer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RegisterViewerAck_UserPreferencesEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<RegisterViewerAck_UserPreferencesEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<RegisterViewerAck_UserPreferencesEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  RegisterViewerAck_UserPreferencesEntry_DoNotUse();
  RegisterViewerAck_UserPreferencesEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const RegisterViewerAck_UserPreferencesEntry_DoNotUse& other);
  static const RegisterViewerAck_UserPreferencesEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const RegisterViewerAck_UserPreferencesEntry_DoNotUse*>(&_RegisterViewerAck_UserPreferencesEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class RegisterViewerAck_UserLayoutsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<RegisterViewerAck_UserLayoutsEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<RegisterViewerAck_UserLayoutsEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  RegisterViewerAck_UserLayoutsEntry_DoNotUse();
  RegisterViewerAck_UserLayoutsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const RegisterViewerAck_UserLayoutsEntry_DoNotUse& other);
  static const RegisterViewerAck_UserLayoutsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const RegisterViewerAck_UserLayoutsEntry_DoNotUse*>(&_RegisterViewerAck_UserLayoutsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class RegisterViewerAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CARTA.RegisterViewerAck) */ {
 public:
  RegisterViewerAck();
  virtual ~RegisterViewerAck();

  RegisterViewerAck(const RegisterViewerAck& from);

  inline RegisterViewerAck& operator=(const RegisterViewerAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RegisterViewerAck(RegisterViewerAck&& from) noexcept
    : RegisterViewerAck() {
    *this = ::std::move(from);
  }

  inline RegisterViewerAck& operator=(RegisterViewerAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RegisterViewerAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RegisterViewerAck* internal_default_instance() {
    return reinterpret_cast<const RegisterViewerAck*>(
               &_RegisterViewerAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(RegisterViewerAck* other);
  friend void swap(RegisterViewerAck& a, RegisterViewerAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RegisterViewerAck* New() const final {
    return CreateMaybeMessage<RegisterViewerAck>(NULL);
  }

  RegisterViewerAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RegisterViewerAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RegisterViewerAck& from);
  void MergeFrom(const RegisterViewerAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RegisterViewerAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> user_preferences = 6;
  int user_preferences_size() const;
  void clear_user_preferences();
  static const int kUserPreferencesFieldNumber = 6;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      user_preferences() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_user_preferences();

  // map<string, string> user_layouts = 7;
  int user_layouts_size() const;
  void clear_user_layouts();
  static const int kUserLayoutsFieldNumber = 7;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      user_layouts() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_user_layouts();

  // string message = 3;
  void clear_message();
  static const int kMessageFieldNumber = 3;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // fixed32 session_id = 1;
  void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  ::google::protobuf::uint32 session_id() const;
  void set_session_id(::google::protobuf::uint32 value);

  // bool success = 2;
  void clear_success();
  static const int kSuccessFieldNumber = 2;
  bool success() const;
  void set_success(bool value);

  // .CARTA.SessionType session_type = 4;
  void clear_session_type();
  static const int kSessionTypeFieldNumber = 4;
  ::CARTA::SessionType session_type() const;
  void set_session_type(::CARTA::SessionType value);

  // fixed32 server_feature_flags = 5;
  void clear_server_feature_flags();
  static const int kServerFeatureFlagsFieldNumber = 5;
  ::google::protobuf::uint32 server_feature_flags() const;
  void set_server_feature_flags(::google::protobuf::uint32 value);

  // fixed32 grpc_port = 8;
  void clear_grpc_port();
  static const int kGrpcPortFieldNumber = 8;
  ::google::protobuf::uint32 grpc_port() const;
  void set_grpc_port(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CARTA.RegisterViewerAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      RegisterViewerAck_UserPreferencesEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > user_preferences_;
  ::google::protobuf::internal::MapField<
      RegisterViewerAck_UserLayoutsEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > user_layouts_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::google::protobuf::uint32 session_id_;
  bool success_;
  int session_type_;
  ::google::protobuf::uint32 server_feature_flags_;
  ::google::protobuf::uint32 grpc_port_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_register_5fviewer_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// RegisterViewer

// fixed32 session_id = 1;
inline void RegisterViewer::clear_session_id() {
  session_id_ = 0u;
}
inline ::google::protobuf::uint32 RegisterViewer::session_id() const {
  // @@protoc_insertion_point(field_get:CARTA.RegisterViewer.session_id)
  return session_id_;
}
inline void RegisterViewer::set_session_id(::google::protobuf::uint32 value) {
  
  session_id_ = value;
  // @@protoc_insertion_point(field_set:CARTA.RegisterViewer.session_id)
}

// string api_key = 2;
inline void RegisterViewer::clear_api_key() {
  api_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegisterViewer::api_key() const {
  // @@protoc_insertion_point(field_get:CARTA.RegisterViewer.api_key)
  return api_key_.GetNoArena();
}
inline void RegisterViewer::set_api_key(const ::std::string& value) {
  
  api_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CARTA.RegisterViewer.api_key)
}
#if LANG_CXX11
inline void RegisterViewer::set_api_key(::std::string&& value) {
  
  api_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CARTA.RegisterViewer.api_key)
}
#endif
inline void RegisterViewer::set_api_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  api_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CARTA.RegisterViewer.api_key)
}
inline void RegisterViewer::set_api_key(const char* value, size_t size) {
  
  api_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CARTA.RegisterViewer.api_key)
}
inline ::std::string* RegisterViewer::mutable_api_key() {
  
  // @@protoc_insertion_point(field_mutable:CARTA.RegisterViewer.api_key)
  return api_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegisterViewer::release_api_key() {
  // @@protoc_insertion_point(field_release:CARTA.RegisterViewer.api_key)
  
  return api_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegisterViewer::set_allocated_api_key(::std::string* api_key) {
  if (api_key != NULL) {
    
  } else {
    
  }
  api_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), api_key);
  // @@protoc_insertion_point(field_set_allocated:CARTA.RegisterViewer.api_key)
}

// fixed32 client_feature_flags = 3;
inline void RegisterViewer::clear_client_feature_flags() {
  client_feature_flags_ = 0u;
}
inline ::google::protobuf::uint32 RegisterViewer::client_feature_flags() const {
  // @@protoc_insertion_point(field_get:CARTA.RegisterViewer.client_feature_flags)
  return client_feature_flags_;
}
inline void RegisterViewer::set_client_feature_flags(::google::protobuf::uint32 value) {
  
  client_feature_flags_ = value;
  // @@protoc_insertion_point(field_set:CARTA.RegisterViewer.client_feature_flags)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// RegisterViewerAck

// fixed32 session_id = 1;
inline void RegisterViewerAck::clear_session_id() {
  session_id_ = 0u;
}
inline ::google::protobuf::uint32 RegisterViewerAck::session_id() const {
  // @@protoc_insertion_point(field_get:CARTA.RegisterViewerAck.session_id)
  return session_id_;
}
inline void RegisterViewerAck::set_session_id(::google::protobuf::uint32 value) {
  
  session_id_ = value;
  // @@protoc_insertion_point(field_set:CARTA.RegisterViewerAck.session_id)
}

// bool success = 2;
inline void RegisterViewerAck::clear_success() {
  success_ = false;
}
inline bool RegisterViewerAck::success() const {
  // @@protoc_insertion_point(field_get:CARTA.RegisterViewerAck.success)
  return success_;
}
inline void RegisterViewerAck::set_success(bool value) {
  
  success_ = value;
  // @@protoc_insertion_point(field_set:CARTA.RegisterViewerAck.success)
}

// string message = 3;
inline void RegisterViewerAck::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegisterViewerAck::message() const {
  // @@protoc_insertion_point(field_get:CARTA.RegisterViewerAck.message)
  return message_.GetNoArena();
}
inline void RegisterViewerAck::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CARTA.RegisterViewerAck.message)
}
#if LANG_CXX11
inline void RegisterViewerAck::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CARTA.RegisterViewerAck.message)
}
#endif
inline void RegisterViewerAck::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CARTA.RegisterViewerAck.message)
}
inline void RegisterViewerAck::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CARTA.RegisterViewerAck.message)
}
inline ::std::string* RegisterViewerAck::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:CARTA.RegisterViewerAck.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegisterViewerAck::release_message() {
  // @@protoc_insertion_point(field_release:CARTA.RegisterViewerAck.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegisterViewerAck::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:CARTA.RegisterViewerAck.message)
}

// .CARTA.SessionType session_type = 4;
inline void RegisterViewerAck::clear_session_type() {
  session_type_ = 0;
}
inline ::CARTA::SessionType RegisterViewerAck::session_type() const {
  // @@protoc_insertion_point(field_get:CARTA.RegisterViewerAck.session_type)
  return static_cast< ::CARTA::SessionType >(session_type_);
}
inline void RegisterViewerAck::set_session_type(::CARTA::SessionType value) {
  
  session_type_ = value;
  // @@protoc_insertion_point(field_set:CARTA.RegisterViewerAck.session_type)
}

// fixed32 server_feature_flags = 5;
inline void RegisterViewerAck::clear_server_feature_flags() {
  server_feature_flags_ = 0u;
}
inline ::google::protobuf::uint32 RegisterViewerAck::server_feature_flags() const {
  // @@protoc_insertion_point(field_get:CARTA.RegisterViewerAck.server_feature_flags)
  return server_feature_flags_;
}
inline void RegisterViewerAck::set_server_feature_flags(::google::protobuf::uint32 value) {
  
  server_feature_flags_ = value;
  // @@protoc_insertion_point(field_set:CARTA.RegisterViewerAck.server_feature_flags)
}

// map<string, string> user_preferences = 6;
inline int RegisterViewerAck::user_preferences_size() const {
  return user_preferences_.size();
}
inline void RegisterViewerAck::clear_user_preferences() {
  user_preferences_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
RegisterViewerAck::user_preferences() const {
  // @@protoc_insertion_point(field_map:CARTA.RegisterViewerAck.user_preferences)
  return user_preferences_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
RegisterViewerAck::mutable_user_preferences() {
  // @@protoc_insertion_point(field_mutable_map:CARTA.RegisterViewerAck.user_preferences)
  return user_preferences_.MutableMap();
}

// map<string, string> user_layouts = 7;
inline int RegisterViewerAck::user_layouts_size() const {
  return user_layouts_.size();
}
inline void RegisterViewerAck::clear_user_layouts() {
  user_layouts_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
RegisterViewerAck::user_layouts() const {
  // @@protoc_insertion_point(field_map:CARTA.RegisterViewerAck.user_layouts)
  return user_layouts_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
RegisterViewerAck::mutable_user_layouts() {
  // @@protoc_insertion_point(field_mutable_map:CARTA.RegisterViewerAck.user_layouts)
  return user_layouts_.MutableMap();
}

// fixed32 grpc_port = 8;
inline void RegisterViewerAck::clear_grpc_port() {
  grpc_port_ = 0u;
}
inline ::google::protobuf::uint32 RegisterViewerAck::grpc_port() const {
  // @@protoc_insertion_point(field_get:CARTA.RegisterViewerAck.grpc_port)
  return grpc_port_;
}
inline void RegisterViewerAck::set_grpc_port(::google::protobuf::uint32 value) {
  
  grpc_port_ = value;
  // @@protoc_insertion_point(field_set:CARTA.RegisterViewerAck.grpc_port)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace CARTA

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_register_5fviewer_2eproto
