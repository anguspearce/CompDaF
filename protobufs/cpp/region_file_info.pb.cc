// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: region_file_info.proto

#include "region_file_info.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_defs_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_defs_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FileInfo;
}  // namespace protobuf_defs_2eproto
namespace CARTA {
class RegionFileInfoRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RegionFileInfoRequest>
      _instance;
} _RegionFileInfoRequest_default_instance_;
class RegionFileInfoResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RegionFileInfoResponse>
      _instance;
} _RegionFileInfoResponse_default_instance_;
}  // namespace CARTA
namespace protobuf_region_5ffile_5finfo_2eproto {
static void InitDefaultsRegionFileInfoRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CARTA::_RegionFileInfoRequest_default_instance_;
    new (ptr) ::CARTA::RegionFileInfoRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CARTA::RegionFileInfoRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RegionFileInfoRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRegionFileInfoRequest}, {}};

static void InitDefaultsRegionFileInfoResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CARTA::_RegionFileInfoResponse_default_instance_;
    new (ptr) ::CARTA::RegionFileInfoResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CARTA::RegionFileInfoResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RegionFileInfoResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRegionFileInfoResponse}, {
      &protobuf_defs_2eproto::scc_info_FileInfo.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_RegionFileInfoRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RegionFileInfoResponse.base);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::RegionFileInfoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::RegionFileInfoRequest, directory_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::RegionFileInfoRequest, file_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::RegionFileInfoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::RegionFileInfoResponse, success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::RegionFileInfoResponse, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::RegionFileInfoResponse, file_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CARTA::RegionFileInfoResponse, contents_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::CARTA::RegionFileInfoRequest)},
  { 7, -1, sizeof(::CARTA::RegionFileInfoResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::CARTA::_RegionFileInfoRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::CARTA::_RegionFileInfoResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "region_file_info.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\026region_file_info.proto\022\005CARTA\032\ndefs.pr"
      "oto\"8\n\025RegionFileInfoRequest\022\021\n\tdirector"
      "y\030\001 \001(\t\022\014\n\004file\030\002 \001(\t\"p\n\026RegionFileInfoR"
      "esponse\022\017\n\007success\030\001 \001(\010\022\017\n\007message\030\002 \001("
      "\t\022\"\n\tfile_info\030\003 \001(\0132\017.CARTA.FileInfo\022\020\n"
      "\010contents\030\004 \003(\tb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 223);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "region_file_info.proto", &protobuf_RegisterTypes);
  ::protobuf_defs_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_region_5ffile_5finfo_2eproto
namespace CARTA {

// ===================================================================

void RegionFileInfoRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegionFileInfoRequest::kDirectoryFieldNumber;
const int RegionFileInfoRequest::kFileFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegionFileInfoRequest::RegionFileInfoRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_region_5ffile_5finfo_2eproto::scc_info_RegionFileInfoRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CARTA.RegionFileInfoRequest)
}
RegionFileInfoRequest::RegionFileInfoRequest(const RegionFileInfoRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  directory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.directory().size() > 0) {
    directory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.directory_);
  }
  file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.file().size() > 0) {
    file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_);
  }
  // @@protoc_insertion_point(copy_constructor:CARTA.RegionFileInfoRequest)
}

void RegionFileInfoRequest::SharedCtor() {
  directory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

RegionFileInfoRequest::~RegionFileInfoRequest() {
  // @@protoc_insertion_point(destructor:CARTA.RegionFileInfoRequest)
  SharedDtor();
}

void RegionFileInfoRequest::SharedDtor() {
  directory_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RegionFileInfoRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RegionFileInfoRequest::descriptor() {
  ::protobuf_region_5ffile_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_region_5ffile_5finfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RegionFileInfoRequest& RegionFileInfoRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_region_5ffile_5finfo_2eproto::scc_info_RegionFileInfoRequest.base);
  return *internal_default_instance();
}


void RegionFileInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CARTA.RegionFileInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  directory_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool RegionFileInfoRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CARTA.RegionFileInfoRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string directory = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_directory()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->directory().data(), static_cast<int>(this->directory().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CARTA.RegionFileInfoRequest.directory"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string file = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->file().data(), static_cast<int>(this->file().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CARTA.RegionFileInfoRequest.file"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CARTA.RegionFileInfoRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CARTA.RegionFileInfoRequest)
  return false;
#undef DO_
}

void RegionFileInfoRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CARTA.RegionFileInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string directory = 1;
  if (this->directory().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->directory().data(), static_cast<int>(this->directory().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CARTA.RegionFileInfoRequest.directory");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->directory(), output);
  }

  // string file = 2;
  if (this->file().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file().data(), static_cast<int>(this->file().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CARTA.RegionFileInfoRequest.file");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->file(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CARTA.RegionFileInfoRequest)
}

::google::protobuf::uint8* RegionFileInfoRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CARTA.RegionFileInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string directory = 1;
  if (this->directory().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->directory().data(), static_cast<int>(this->directory().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CARTA.RegionFileInfoRequest.directory");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->directory(), target);
  }

  // string file = 2;
  if (this->file().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file().data(), static_cast<int>(this->file().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CARTA.RegionFileInfoRequest.file");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->file(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CARTA.RegionFileInfoRequest)
  return target;
}

size_t RegionFileInfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CARTA.RegionFileInfoRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string directory = 1;
  if (this->directory().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->directory());
  }

  // string file = 2;
  if (this->file().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegionFileInfoRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CARTA.RegionFileInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RegionFileInfoRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegionFileInfoRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CARTA.RegionFileInfoRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CARTA.RegionFileInfoRequest)
    MergeFrom(*source);
  }
}

void RegionFileInfoRequest::MergeFrom(const RegionFileInfoRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CARTA.RegionFileInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.directory().size() > 0) {

    directory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.directory_);
  }
  if (from.file().size() > 0) {

    file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_);
  }
}

void RegionFileInfoRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CARTA.RegionFileInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegionFileInfoRequest::CopyFrom(const RegionFileInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CARTA.RegionFileInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegionFileInfoRequest::IsInitialized() const {
  return true;
}

void RegionFileInfoRequest::Swap(RegionFileInfoRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegionFileInfoRequest::InternalSwap(RegionFileInfoRequest* other) {
  using std::swap;
  directory_.Swap(&other->directory_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  file_.Swap(&other->file_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RegionFileInfoRequest::GetMetadata() const {
  protobuf_region_5ffile_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_region_5ffile_5finfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RegionFileInfoResponse::InitAsDefaultInstance() {
  ::CARTA::_RegionFileInfoResponse_default_instance_._instance.get_mutable()->file_info_ = const_cast< ::CARTA::FileInfo*>(
      ::CARTA::FileInfo::internal_default_instance());
}
void RegionFileInfoResponse::clear_file_info() {
  if (GetArenaNoVirtual() == NULL && file_info_ != NULL) {
    delete file_info_;
  }
  file_info_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegionFileInfoResponse::kSuccessFieldNumber;
const int RegionFileInfoResponse::kMessageFieldNumber;
const int RegionFileInfoResponse::kFileInfoFieldNumber;
const int RegionFileInfoResponse::kContentsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegionFileInfoResponse::RegionFileInfoResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_region_5ffile_5finfo_2eproto::scc_info_RegionFileInfoResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CARTA.RegionFileInfoResponse)
}
RegionFileInfoResponse::RegionFileInfoResponse(const RegionFileInfoResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      contents_(from.contents_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.has_file_info()) {
    file_info_ = new ::CARTA::FileInfo(*from.file_info_);
  } else {
    file_info_ = NULL;
  }
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:CARTA.RegionFileInfoResponse)
}

void RegionFileInfoResponse::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&file_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&success_) -
      reinterpret_cast<char*>(&file_info_)) + sizeof(success_));
}

RegionFileInfoResponse::~RegionFileInfoResponse() {
  // @@protoc_insertion_point(destructor:CARTA.RegionFileInfoResponse)
  SharedDtor();
}

void RegionFileInfoResponse::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete file_info_;
}

void RegionFileInfoResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RegionFileInfoResponse::descriptor() {
  ::protobuf_region_5ffile_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_region_5ffile_5finfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RegionFileInfoResponse& RegionFileInfoResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_region_5ffile_5finfo_2eproto::scc_info_RegionFileInfoResponse.base);
  return *internal_default_instance();
}


void RegionFileInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CARTA.RegionFileInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  contents_.Clear();
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && file_info_ != NULL) {
    delete file_info_;
  }
  file_info_ = NULL;
  success_ = false;
  _internal_metadata_.Clear();
}

bool RegionFileInfoResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CARTA.RegionFileInfoResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool success = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CARTA.RegionFileInfoResponse.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .CARTA.FileInfo file_info = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_file_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string contents = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_contents()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->contents(this->contents_size() - 1).data(),
            static_cast<int>(this->contents(this->contents_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CARTA.RegionFileInfoResponse.contents"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CARTA.RegionFileInfoResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CARTA.RegionFileInfoResponse)
  return false;
#undef DO_
}

void RegionFileInfoResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CARTA.RegionFileInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CARTA.RegionFileInfoResponse.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  // .CARTA.FileInfo file_info = 3;
  if (this->has_file_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_file_info(), output);
  }

  // repeated string contents = 4;
  for (int i = 0, n = this->contents_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contents(i).data(), static_cast<int>(this->contents(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CARTA.RegionFileInfoResponse.contents");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->contents(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CARTA.RegionFileInfoResponse)
}

::google::protobuf::uint8* RegionFileInfoResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CARTA.RegionFileInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CARTA.RegionFileInfoResponse.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  // .CARTA.FileInfo file_info = 3;
  if (this->has_file_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_file_info(), deterministic, target);
  }

  // repeated string contents = 4;
  for (int i = 0, n = this->contents_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contents(i).data(), static_cast<int>(this->contents(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CARTA.RegionFileInfoResponse.contents");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->contents(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CARTA.RegionFileInfoResponse)
  return target;
}

size_t RegionFileInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CARTA.RegionFileInfoResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string contents = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->contents_size());
  for (int i = 0, n = this->contents_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->contents(i));
  }

  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // .CARTA.FileInfo file_info = 3;
  if (this->has_file_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *file_info_);
  }

  // bool success = 1;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegionFileInfoResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CARTA.RegionFileInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RegionFileInfoResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegionFileInfoResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CARTA.RegionFileInfoResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CARTA.RegionFileInfoResponse)
    MergeFrom(*source);
  }
}

void RegionFileInfoResponse::MergeFrom(const RegionFileInfoResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CARTA.RegionFileInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  contents_.MergeFrom(from.contents_);
  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.has_file_info()) {
    mutable_file_info()->::CARTA::FileInfo::MergeFrom(from.file_info());
  }
  if (from.success() != 0) {
    set_success(from.success());
  }
}

void RegionFileInfoResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CARTA.RegionFileInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegionFileInfoResponse::CopyFrom(const RegionFileInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CARTA.RegionFileInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegionFileInfoResponse::IsInitialized() const {
  return true;
}

void RegionFileInfoResponse::Swap(RegionFileInfoResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegionFileInfoResponse::InternalSwap(RegionFileInfoResponse* other) {
  using std::swap;
  contents_.InternalSwap(CastToBase(&other->contents_));
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(file_info_, other->file_info_);
  swap(success_, other->success_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RegionFileInfoResponse::GetMetadata() const {
  protobuf_region_5ffile_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_region_5ffile_5finfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace CARTA
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CARTA::RegionFileInfoRequest* Arena::CreateMaybeMessage< ::CARTA::RegionFileInfoRequest >(Arena* arena) {
  return Arena::CreateInternal< ::CARTA::RegionFileInfoRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CARTA::RegionFileInfoResponse* Arena::CreateMaybeMessage< ::CARTA::RegionFileInfoResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CARTA::RegionFileInfoResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
