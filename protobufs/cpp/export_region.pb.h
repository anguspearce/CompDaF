// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: export_region.proto

#ifndef PROTOBUF_INCLUDED_export_5fregion_2eproto
#define PROTOBUF_INCLUDED_export_5fregion_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
#include "defs.pb.h"
#include "enums.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_export_5fregion_2eproto 

namespace protobuf_export_5fregion_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_export_5fregion_2eproto
namespace CARTA {
class ExportRegion;
class ExportRegionDefaultTypeInternal;
extern ExportRegionDefaultTypeInternal _ExportRegion_default_instance_;
class ExportRegionAck;
class ExportRegionAckDefaultTypeInternal;
extern ExportRegionAckDefaultTypeInternal _ExportRegionAck_default_instance_;
class ExportRegion_RegionStylesEntry_DoNotUse;
class ExportRegion_RegionStylesEntry_DoNotUseDefaultTypeInternal;
extern ExportRegion_RegionStylesEntry_DoNotUseDefaultTypeInternal _ExportRegion_RegionStylesEntry_DoNotUse_default_instance_;
}  // namespace CARTA
namespace google {
namespace protobuf {
template<> ::CARTA::ExportRegion* Arena::CreateMaybeMessage<::CARTA::ExportRegion>(Arena*);
template<> ::CARTA::ExportRegionAck* Arena::CreateMaybeMessage<::CARTA::ExportRegionAck>(Arena*);
template<> ::CARTA::ExportRegion_RegionStylesEntry_DoNotUse* Arena::CreateMaybeMessage<::CARTA::ExportRegion_RegionStylesEntry_DoNotUse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace CARTA {

// ===================================================================

class ExportRegion_RegionStylesEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<ExportRegion_RegionStylesEntry_DoNotUse, 
    ::google::protobuf::int32, ::CARTA::RegionStyle,
    ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<ExportRegion_RegionStylesEntry_DoNotUse, 
    ::google::protobuf::int32, ::CARTA::RegionStyle,
    ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  ExportRegion_RegionStylesEntry_DoNotUse();
  ExportRegion_RegionStylesEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const ExportRegion_RegionStylesEntry_DoNotUse& other);
  static const ExportRegion_RegionStylesEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const ExportRegion_RegionStylesEntry_DoNotUse*>(&_ExportRegion_RegionStylesEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class ExportRegion : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CARTA.ExportRegion) */ {
 public:
  ExportRegion();
  virtual ~ExportRegion();

  ExportRegion(const ExportRegion& from);

  inline ExportRegion& operator=(const ExportRegion& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExportRegion(ExportRegion&& from) noexcept
    : ExportRegion() {
    *this = ::std::move(from);
  }

  inline ExportRegion& operator=(ExportRegion&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ExportRegion& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExportRegion* internal_default_instance() {
    return reinterpret_cast<const ExportRegion*>(
               &_ExportRegion_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(ExportRegion* other);
  friend void swap(ExportRegion& a, ExportRegion& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExportRegion* New() const final {
    return CreateMaybeMessage<ExportRegion>(NULL);
  }

  ExportRegion* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ExportRegion>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ExportRegion& from);
  void MergeFrom(const ExportRegion& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ExportRegion* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<sfixed32, .CARTA.RegionStyle> region_styles = 4;
  int region_styles_size() const;
  void clear_region_styles();
  static const int kRegionStylesFieldNumber = 4;
  const ::google::protobuf::Map< ::google::protobuf::int32, ::CARTA::RegionStyle >&
      region_styles() const;
  ::google::protobuf::Map< ::google::protobuf::int32, ::CARTA::RegionStyle >*
      mutable_region_styles();

  // string directory = 5;
  void clear_directory();
  static const int kDirectoryFieldNumber = 5;
  const ::std::string& directory() const;
  void set_directory(const ::std::string& value);
  #if LANG_CXX11
  void set_directory(::std::string&& value);
  #endif
  void set_directory(const char* value);
  void set_directory(const char* value, size_t size);
  ::std::string* mutable_directory();
  ::std::string* release_directory();
  void set_allocated_directory(::std::string* directory);

  // string file = 6;
  void clear_file();
  static const int kFileFieldNumber = 6;
  const ::std::string& file() const;
  void set_file(const ::std::string& value);
  #if LANG_CXX11
  void set_file(::std::string&& value);
  #endif
  void set_file(const char* value);
  void set_file(const char* value, size_t size);
  ::std::string* mutable_file();
  ::std::string* release_file();
  void set_allocated_file(::std::string* file);

  // .CARTA.FileType type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::CARTA::FileType type() const;
  void set_type(::CARTA::FileType value);

  // .CARTA.CoordinateType coord_type = 2;
  void clear_coord_type();
  static const int kCoordTypeFieldNumber = 2;
  ::CARTA::CoordinateType coord_type() const;
  void set_coord_type(::CARTA::CoordinateType value);

  // sfixed32 file_id = 3;
  void clear_file_id();
  static const int kFileIdFieldNumber = 3;
  ::google::protobuf::int32 file_id() const;
  void set_file_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CARTA.ExportRegion)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      ExportRegion_RegionStylesEntry_DoNotUse,
      ::google::protobuf::int32, ::CARTA::RegionStyle,
      ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > region_styles_;
  ::google::protobuf::internal::ArenaStringPtr directory_;
  ::google::protobuf::internal::ArenaStringPtr file_;
  int type_;
  int coord_type_;
  ::google::protobuf::int32 file_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_export_5fregion_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ExportRegionAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CARTA.ExportRegionAck) */ {
 public:
  ExportRegionAck();
  virtual ~ExportRegionAck();

  ExportRegionAck(const ExportRegionAck& from);

  inline ExportRegionAck& operator=(const ExportRegionAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExportRegionAck(ExportRegionAck&& from) noexcept
    : ExportRegionAck() {
    *this = ::std::move(from);
  }

  inline ExportRegionAck& operator=(ExportRegionAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ExportRegionAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExportRegionAck* internal_default_instance() {
    return reinterpret_cast<const ExportRegionAck*>(
               &_ExportRegionAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(ExportRegionAck* other);
  friend void swap(ExportRegionAck& a, ExportRegionAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExportRegionAck* New() const final {
    return CreateMaybeMessage<ExportRegionAck>(NULL);
  }

  ExportRegionAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ExportRegionAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ExportRegionAck& from);
  void MergeFrom(const ExportRegionAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ExportRegionAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string contents = 3;
  int contents_size() const;
  void clear_contents();
  static const int kContentsFieldNumber = 3;
  const ::std::string& contents(int index) const;
  ::std::string* mutable_contents(int index);
  void set_contents(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_contents(int index, ::std::string&& value);
  #endif
  void set_contents(int index, const char* value);
  void set_contents(int index, const char* value, size_t size);
  ::std::string* add_contents();
  void add_contents(const ::std::string& value);
  #if LANG_CXX11
  void add_contents(::std::string&& value);
  #endif
  void add_contents(const char* value);
  void add_contents(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& contents() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_contents();

  // string message = 2;
  void clear_message();
  static const int kMessageFieldNumber = 2;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // bool success = 1;
  void clear_success();
  static const int kSuccessFieldNumber = 1;
  bool success() const;
  void set_success(bool value);

  // @@protoc_insertion_point(class_scope:CARTA.ExportRegionAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> contents_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  bool success_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_export_5fregion_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// ExportRegion

// .CARTA.FileType type = 1;
inline void ExportRegion::clear_type() {
  type_ = 0;
}
inline ::CARTA::FileType ExportRegion::type() const {
  // @@protoc_insertion_point(field_get:CARTA.ExportRegion.type)
  return static_cast< ::CARTA::FileType >(type_);
}
inline void ExportRegion::set_type(::CARTA::FileType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:CARTA.ExportRegion.type)
}

// .CARTA.CoordinateType coord_type = 2;
inline void ExportRegion::clear_coord_type() {
  coord_type_ = 0;
}
inline ::CARTA::CoordinateType ExportRegion::coord_type() const {
  // @@protoc_insertion_point(field_get:CARTA.ExportRegion.coord_type)
  return static_cast< ::CARTA::CoordinateType >(coord_type_);
}
inline void ExportRegion::set_coord_type(::CARTA::CoordinateType value) {
  
  coord_type_ = value;
  // @@protoc_insertion_point(field_set:CARTA.ExportRegion.coord_type)
}

// sfixed32 file_id = 3;
inline void ExportRegion::clear_file_id() {
  file_id_ = 0;
}
inline ::google::protobuf::int32 ExportRegion::file_id() const {
  // @@protoc_insertion_point(field_get:CARTA.ExportRegion.file_id)
  return file_id_;
}
inline void ExportRegion::set_file_id(::google::protobuf::int32 value) {
  
  file_id_ = value;
  // @@protoc_insertion_point(field_set:CARTA.ExportRegion.file_id)
}

// map<sfixed32, .CARTA.RegionStyle> region_styles = 4;
inline int ExportRegion::region_styles_size() const {
  return region_styles_.size();
}
inline const ::google::protobuf::Map< ::google::protobuf::int32, ::CARTA::RegionStyle >&
ExportRegion::region_styles() const {
  // @@protoc_insertion_point(field_map:CARTA.ExportRegion.region_styles)
  return region_styles_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int32, ::CARTA::RegionStyle >*
ExportRegion::mutable_region_styles() {
  // @@protoc_insertion_point(field_mutable_map:CARTA.ExportRegion.region_styles)
  return region_styles_.MutableMap();
}

// string directory = 5;
inline void ExportRegion::clear_directory() {
  directory_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ExportRegion::directory() const {
  // @@protoc_insertion_point(field_get:CARTA.ExportRegion.directory)
  return directory_.GetNoArena();
}
inline void ExportRegion::set_directory(const ::std::string& value) {
  
  directory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CARTA.ExportRegion.directory)
}
#if LANG_CXX11
inline void ExportRegion::set_directory(::std::string&& value) {
  
  directory_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CARTA.ExportRegion.directory)
}
#endif
inline void ExportRegion::set_directory(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  directory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CARTA.ExportRegion.directory)
}
inline void ExportRegion::set_directory(const char* value, size_t size) {
  
  directory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CARTA.ExportRegion.directory)
}
inline ::std::string* ExportRegion::mutable_directory() {
  
  // @@protoc_insertion_point(field_mutable:CARTA.ExportRegion.directory)
  return directory_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExportRegion::release_directory() {
  // @@protoc_insertion_point(field_release:CARTA.ExportRegion.directory)
  
  return directory_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExportRegion::set_allocated_directory(::std::string* directory) {
  if (directory != NULL) {
    
  } else {
    
  }
  directory_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), directory);
  // @@protoc_insertion_point(field_set_allocated:CARTA.ExportRegion.directory)
}

// string file = 6;
inline void ExportRegion::clear_file() {
  file_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ExportRegion::file() const {
  // @@protoc_insertion_point(field_get:CARTA.ExportRegion.file)
  return file_.GetNoArena();
}
inline void ExportRegion::set_file(const ::std::string& value) {
  
  file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CARTA.ExportRegion.file)
}
#if LANG_CXX11
inline void ExportRegion::set_file(::std::string&& value) {
  
  file_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CARTA.ExportRegion.file)
}
#endif
inline void ExportRegion::set_file(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CARTA.ExportRegion.file)
}
inline void ExportRegion::set_file(const char* value, size_t size) {
  
  file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CARTA.ExportRegion.file)
}
inline ::std::string* ExportRegion::mutable_file() {
  
  // @@protoc_insertion_point(field_mutable:CARTA.ExportRegion.file)
  return file_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExportRegion::release_file() {
  // @@protoc_insertion_point(field_release:CARTA.ExportRegion.file)
  
  return file_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExportRegion::set_allocated_file(::std::string* file) {
  if (file != NULL) {
    
  } else {
    
  }
  file_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file);
  // @@protoc_insertion_point(field_set_allocated:CARTA.ExportRegion.file)
}

// -------------------------------------------------------------------

// ExportRegionAck

// bool success = 1;
inline void ExportRegionAck::clear_success() {
  success_ = false;
}
inline bool ExportRegionAck::success() const {
  // @@protoc_insertion_point(field_get:CARTA.ExportRegionAck.success)
  return success_;
}
inline void ExportRegionAck::set_success(bool value) {
  
  success_ = value;
  // @@protoc_insertion_point(field_set:CARTA.ExportRegionAck.success)
}

// string message = 2;
inline void ExportRegionAck::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ExportRegionAck::message() const {
  // @@protoc_insertion_point(field_get:CARTA.ExportRegionAck.message)
  return message_.GetNoArena();
}
inline void ExportRegionAck::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CARTA.ExportRegionAck.message)
}
#if LANG_CXX11
inline void ExportRegionAck::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CARTA.ExportRegionAck.message)
}
#endif
inline void ExportRegionAck::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CARTA.ExportRegionAck.message)
}
inline void ExportRegionAck::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CARTA.ExportRegionAck.message)
}
inline ::std::string* ExportRegionAck::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:CARTA.ExportRegionAck.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExportRegionAck::release_message() {
  // @@protoc_insertion_point(field_release:CARTA.ExportRegionAck.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExportRegionAck::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:CARTA.ExportRegionAck.message)
}

// repeated string contents = 3;
inline int ExportRegionAck::contents_size() const {
  return contents_.size();
}
inline void ExportRegionAck::clear_contents() {
  contents_.Clear();
}
inline const ::std::string& ExportRegionAck::contents(int index) const {
  // @@protoc_insertion_point(field_get:CARTA.ExportRegionAck.contents)
  return contents_.Get(index);
}
inline ::std::string* ExportRegionAck::mutable_contents(int index) {
  // @@protoc_insertion_point(field_mutable:CARTA.ExportRegionAck.contents)
  return contents_.Mutable(index);
}
inline void ExportRegionAck::set_contents(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:CARTA.ExportRegionAck.contents)
  contents_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ExportRegionAck::set_contents(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:CARTA.ExportRegionAck.contents)
  contents_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ExportRegionAck::set_contents(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  contents_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CARTA.ExportRegionAck.contents)
}
inline void ExportRegionAck::set_contents(int index, const char* value, size_t size) {
  contents_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CARTA.ExportRegionAck.contents)
}
inline ::std::string* ExportRegionAck::add_contents() {
  // @@protoc_insertion_point(field_add_mutable:CARTA.ExportRegionAck.contents)
  return contents_.Add();
}
inline void ExportRegionAck::add_contents(const ::std::string& value) {
  contents_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CARTA.ExportRegionAck.contents)
}
#if LANG_CXX11
inline void ExportRegionAck::add_contents(::std::string&& value) {
  contents_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:CARTA.ExportRegionAck.contents)
}
#endif
inline void ExportRegionAck::add_contents(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  contents_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CARTA.ExportRegionAck.contents)
}
inline void ExportRegionAck::add_contents(const char* value, size_t size) {
  contents_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CARTA.ExportRegionAck.contents)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ExportRegionAck::contents() const {
  // @@protoc_insertion_point(field_list:CARTA.ExportRegionAck.contents)
  return contents_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ExportRegionAck::mutable_contents() {
  // @@protoc_insertion_point(field_mutable_list:CARTA.ExportRegionAck.contents)
  return &contents_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace CARTA

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_export_5fregion_2eproto
